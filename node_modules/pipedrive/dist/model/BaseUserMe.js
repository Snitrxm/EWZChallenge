"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _BaseUser = _interopRequireDefault(require("./BaseUser"));

var _BaseUserMeAllOf = _interopRequireDefault(require("./BaseUserMeAllOf"));

var _BaseUserMeAllOfLanguage = _interopRequireDefault(require("./BaseUserMeAllOfLanguage"));

var _NumberBoolean = _interopRequireDefault(require("./NumberBoolean"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The BaseUserMe model module.
 * @module model/BaseUserMe
 * @version 1.0.0
 */
var BaseUserMe = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>BaseUserMe</code>.
   * @alias module:model/BaseUserMe
   * @implements module:model/BaseUser
   * @implements module:model/BaseUserMeAllOf
   */
  function BaseUserMe() {
    (0, _classCallCheck2["default"])(this, BaseUserMe);

    _BaseUser["default"].initialize(this);

    _BaseUserMeAllOf["default"].initialize(this);

    BaseUserMe.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(BaseUserMe, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>BaseUserMe</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseUserMe} obj Optional instance to populate.
     * @return {module:model/BaseUserMe} The populated <code>BaseUserMe</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new BaseUserMe();

        _BaseUser["default"].constructFromObject(data, obj);

        _BaseUserMeAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
          delete data['id'];
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
          delete data['name'];
        }

        if (data.hasOwnProperty('default_currency')) {
          obj['default_currency'] = _ApiClient["default"].convertToType(data['default_currency'], 'String');
          delete data['default_currency'];
        }

        if (data.hasOwnProperty('locale')) {
          obj['locale'] = _ApiClient["default"].convertToType(data['locale'], 'String');
          delete data['locale'];
        }

        if (data.hasOwnProperty('lang')) {
          obj['lang'] = _ApiClient["default"].convertToType(data['lang'], 'Number');
          delete data['lang'];
        }

        if (data.hasOwnProperty('email')) {
          obj['email'] = _ApiClient["default"].convertToType(data['email'], 'String');
          delete data['email'];
        }

        if (data.hasOwnProperty('phone')) {
          obj['phone'] = _ApiClient["default"].convertToType(data['phone'], 'String');
          delete data['phone'];
        }

        if (data.hasOwnProperty('activated')) {
          obj['activated'] = _ApiClient["default"].convertToType(data['activated'], 'Boolean');
          delete data['activated'];
        }

        if (data.hasOwnProperty('last_login')) {
          obj['last_login'] = _ApiClient["default"].convertToType(data['last_login'], 'String');
          delete data['last_login'];
        }

        if (data.hasOwnProperty('created')) {
          obj['created'] = _ApiClient["default"].convertToType(data['created'], 'String');
          delete data['created'];
        }

        if (data.hasOwnProperty('modified')) {
          obj['modified'] = _ApiClient["default"].convertToType(data['modified'], 'String');
          delete data['modified'];
        }

        if (data.hasOwnProperty('signup_flow_variation')) {
          obj['signup_flow_variation'] = _ApiClient["default"].convertToType(data['signup_flow_variation'], 'String');
          delete data['signup_flow_variation'];
        }

        if (data.hasOwnProperty('has_created_company')) {
          obj['has_created_company'] = _ApiClient["default"].convertToType(data['has_created_company'], 'Boolean');
          delete data['has_created_company'];
        }

        if (data.hasOwnProperty('is_admin')) {
          obj['is_admin'] = _ApiClient["default"].convertToType(data['is_admin'], _NumberBoolean["default"]);
          delete data['is_admin'];
        }

        if (data.hasOwnProperty('active_flag')) {
          obj['active_flag'] = _ApiClient["default"].convertToType(data['active_flag'], 'Boolean');
          delete data['active_flag'];
        }

        if (data.hasOwnProperty('timezone_name')) {
          obj['timezone_name'] = _ApiClient["default"].convertToType(data['timezone_name'], 'String');
          delete data['timezone_name'];
        }

        if (data.hasOwnProperty('timezone_offset')) {
          obj['timezone_offset'] = _ApiClient["default"].convertToType(data['timezone_offset'], 'String');
          delete data['timezone_offset'];
        }

        if (data.hasOwnProperty('role_id')) {
          obj['role_id'] = _ApiClient["default"].convertToType(data['role_id'], 'Number');
          delete data['role_id'];
        }

        if (data.hasOwnProperty('icon_url')) {
          obj['icon_url'] = _ApiClient["default"].convertToType(data['icon_url'], 'String');
          delete data['icon_url'];
        }

        if (data.hasOwnProperty('is_you')) {
          obj['is_you'] = _ApiClient["default"].convertToType(data['is_you'], 'Boolean');
          delete data['is_you'];
        }

        if (data.hasOwnProperty('company_id')) {
          obj['company_id'] = _ApiClient["default"].convertToType(data['company_id'], 'Number');
          delete data['company_id'];
        }

        if (data.hasOwnProperty('company_name')) {
          obj['company_name'] = _ApiClient["default"].convertToType(data['company_name'], 'String');
          delete data['company_name'];
        }

        if (data.hasOwnProperty('company_domain')) {
          obj['company_domain'] = _ApiClient["default"].convertToType(data['company_domain'], 'String');
          delete data['company_domain'];
        }

        if (data.hasOwnProperty('company_country')) {
          obj['company_country'] = _ApiClient["default"].convertToType(data['company_country'], 'String');
          delete data['company_country'];
        }

        if (data.hasOwnProperty('company_industry')) {
          obj['company_industry'] = _ApiClient["default"].convertToType(data['company_industry'], 'String');
          delete data['company_industry'];
        }

        if (data.hasOwnProperty('language')) {
          obj['language'] = _BaseUserMeAllOfLanguage["default"].constructFromObject(data['language']);
          delete data['language'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return BaseUserMe;
}();
/**
 * The user ID
 * @member {Number} id
 */


BaseUserMe.prototype['id'] = undefined;
/**
 * The user name
 * @member {String} name
 */

BaseUserMe.prototype['name'] = undefined;
/**
 * The user default currency
 * @member {String} default_currency
 */

BaseUserMe.prototype['default_currency'] = undefined;
/**
 * The user locale
 * @member {String} locale
 */

BaseUserMe.prototype['locale'] = undefined;
/**
 * The user language ID
 * @member {Number} lang
 */

BaseUserMe.prototype['lang'] = undefined;
/**
 * The user email
 * @member {String} email
 */

BaseUserMe.prototype['email'] = undefined;
/**
 * The user phone
 * @member {String} phone
 */

BaseUserMe.prototype['phone'] = undefined;
/**
 * Boolean that indicates whether the user is activated
 * @member {Boolean} activated
 */

BaseUserMe.prototype['activated'] = undefined;
/**
 * The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} last_login
 */

BaseUserMe.prototype['last_login'] = undefined;
/**
 * The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} created
 */

BaseUserMe.prototype['created'] = undefined;
/**
 * The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} modified
 */

BaseUserMe.prototype['modified'] = undefined;
/**
 * The variation of signup flow (if exists). E.g. google
 * @member {String} signup_flow_variation
 */

BaseUserMe.prototype['signup_flow_variation'] = undefined;
/**
 * Boolean that indicates whether the user has created a company
 * @member {Boolean} has_created_company
 */

BaseUserMe.prototype['has_created_company'] = undefined;
/**
 * Indication if the user is admin (1 = true, 0 = false)
 * @member {module:model/NumberBoolean} is_admin
 */

BaseUserMe.prototype['is_admin'] = undefined;
/**
 * Boolean that indicates whether the user is activated
 * @member {Boolean} active_flag
 */

BaseUserMe.prototype['active_flag'] = undefined;
/**
 * The user timezone name
 * @member {String} timezone_name
 */

BaseUserMe.prototype['timezone_name'] = undefined;
/**
 * The user timezone offset
 * @member {String} timezone_offset
 */

BaseUserMe.prototype['timezone_offset'] = undefined;
/**
 * The ID of the user role
 * @member {Number} role_id
 */

BaseUserMe.prototype['role_id'] = undefined;
/**
 * The user icon URL
 * @member {String} icon_url
 */

BaseUserMe.prototype['icon_url'] = undefined;
/**
 * Boolean that indicates if the requested user is the same which is logged in (in this case, always true)
 * @member {Boolean} is_you
 */

BaseUserMe.prototype['is_you'] = undefined;
/**
 * The user company ID
 * @member {Number} company_id
 */

BaseUserMe.prototype['company_id'] = undefined;
/**
 * The user company name
 * @member {String} company_name
 */

BaseUserMe.prototype['company_name'] = undefined;
/**
 * The user company domain
 * @member {String} company_domain
 */

BaseUserMe.prototype['company_domain'] = undefined;
/**
 * The user company country
 * @member {String} company_country
 */

BaseUserMe.prototype['company_country'] = undefined;
/**
 * The user company industry
 * @member {String} company_industry
 */

BaseUserMe.prototype['company_industry'] = undefined;
/**
 * @member {module:model/BaseUserMeAllOfLanguage} language
 */

BaseUserMe.prototype['language'] = undefined; // Implement BaseUser interface:

/**
 * The user ID
 * @member {Number} id
 */

_BaseUser["default"].prototype['id'] = undefined;
/**
 * The user name
 * @member {String} name
 */

_BaseUser["default"].prototype['name'] = undefined;
/**
 * The user default currency
 * @member {String} default_currency
 */

_BaseUser["default"].prototype['default_currency'] = undefined;
/**
 * The user locale
 * @member {String} locale
 */

_BaseUser["default"].prototype['locale'] = undefined;
/**
 * The user language ID
 * @member {Number} lang
 */

_BaseUser["default"].prototype['lang'] = undefined;
/**
 * The user email
 * @member {String} email
 */

_BaseUser["default"].prototype['email'] = undefined;
/**
 * The user phone
 * @member {String} phone
 */

_BaseUser["default"].prototype['phone'] = undefined;
/**
 * Boolean that indicates whether the user is activated
 * @member {Boolean} activated
 */

_BaseUser["default"].prototype['activated'] = undefined;
/**
 * The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} last_login
 */

_BaseUser["default"].prototype['last_login'] = undefined;
/**
 * The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} created
 */

_BaseUser["default"].prototype['created'] = undefined;
/**
 * The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS
 * @member {String} modified
 */

_BaseUser["default"].prototype['modified'] = undefined;
/**
 * The variation of signup flow (if exists). E.g. google
 * @member {String} signup_flow_variation
 */

_BaseUser["default"].prototype['signup_flow_variation'] = undefined;
/**
 * Boolean that indicates whether the user has created a company
 * @member {Boolean} has_created_company
 */

_BaseUser["default"].prototype['has_created_company'] = undefined;
/**
 * Indication if the user is admin (1 = true, 0 = false)
 * @member {module:model/NumberBoolean} is_admin
 */

_BaseUser["default"].prototype['is_admin'] = undefined;
/**
 * Boolean that indicates whether the user is activated
 * @member {Boolean} active_flag
 */

_BaseUser["default"].prototype['active_flag'] = undefined;
/**
 * The user timezone name
 * @member {String} timezone_name
 */

_BaseUser["default"].prototype['timezone_name'] = undefined;
/**
 * The user timezone offset
 * @member {String} timezone_offset
 */

_BaseUser["default"].prototype['timezone_offset'] = undefined;
/**
 * The ID of the user role
 * @member {Number} role_id
 */

_BaseUser["default"].prototype['role_id'] = undefined;
/**
 * The user icon URL
 * @member {String} icon_url
 */

_BaseUser["default"].prototype['icon_url'] = undefined;
/**
 * Boolean that indicates if the requested user is the same which is logged in (in this case, always true)
 * @member {Boolean} is_you
 */

_BaseUser["default"].prototype['is_you'] = undefined; // Implement BaseUserMeAllOf interface:

/**
 * The user company ID
 * @member {Number} company_id
 */

_BaseUserMeAllOf["default"].prototype['company_id'] = undefined;
/**
 * The user company name
 * @member {String} company_name
 */

_BaseUserMeAllOf["default"].prototype['company_name'] = undefined;
/**
 * The user company domain
 * @member {String} company_domain
 */

_BaseUserMeAllOf["default"].prototype['company_domain'] = undefined;
/**
 * The user company country
 * @member {String} company_country
 */

_BaseUserMeAllOf["default"].prototype['company_country'] = undefined;
/**
 * The user company industry
 * @member {String} company_industry
 */

_BaseUserMeAllOf["default"].prototype['company_industry'] = undefined;
/**
 * @member {module:model/BaseUserMeAllOfLanguage} language
 */

_BaseUserMeAllOf["default"].prototype['language'] = undefined;
var _default = BaseUserMe;
exports["default"] = _default;