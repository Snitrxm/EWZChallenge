"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _MailMessageData = _interopRequireDefault(require("./MailMessageData"));

var _MailMessageItemForListAllOf = _interopRequireDefault(require("./MailMessageItemForListAllOf"));

var _MailParticipant = _interopRequireDefault(require("./MailParticipant"));

var _NumberBooleanDefault = _interopRequireDefault(require("./NumberBooleanDefault0"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The MailMessageItemForList model module.
 * @module model/MailMessageItemForList
 * @version 1.0.0
 */
var MailMessageItemForList = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>MailMessageItemForList</code>.
   * @alias module:model/MailMessageItemForList
   * @implements module:model/MailMessageData
   * @implements module:model/MailMessageItemForListAllOf
   */
  function MailMessageItemForList() {
    (0, _classCallCheck2["default"])(this, MailMessageItemForList);

    _MailMessageData["default"].initialize(this);

    _MailMessageItemForListAllOf["default"].initialize(this);

    MailMessageItemForList.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(MailMessageItemForList, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>MailMessageItemForList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MailMessageItemForList} obj Optional instance to populate.
     * @return {module:model/MailMessageItemForList} The populated <code>MailMessageItemForList</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new MailMessageItemForList();

        _MailMessageData["default"].constructFromObject(data, obj);

        _MailMessageItemForListAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
          delete data['id'];
        }

        if (data.hasOwnProperty('from')) {
          obj['from'] = _ApiClient["default"].convertToType(data['from'], [_MailParticipant["default"]]);
          delete data['from'];
        }

        if (data.hasOwnProperty('to')) {
          obj['to'] = _ApiClient["default"].convertToType(data['to'], [_MailParticipant["default"]]);
          delete data['to'];
        }

        if (data.hasOwnProperty('cc')) {
          obj['cc'] = _ApiClient["default"].convertToType(data['cc'], [_MailParticipant["default"]]);
          delete data['cc'];
        }

        if (data.hasOwnProperty('bcc')) {
          obj['bcc'] = _ApiClient["default"].convertToType(data['bcc'], [_MailParticipant["default"]]);
          delete data['bcc'];
        }

        if (data.hasOwnProperty('body_url')) {
          obj['body_url'] = _ApiClient["default"].convertToType(data['body_url'], 'String');
          delete data['body_url'];
        }

        if (data.hasOwnProperty('account_id')) {
          obj['account_id'] = _ApiClient["default"].convertToType(data['account_id'], 'String');
          delete data['account_id'];
        }

        if (data.hasOwnProperty('user_id')) {
          obj['user_id'] = _ApiClient["default"].convertToType(data['user_id'], 'Number');
          delete data['user_id'];
        }

        if (data.hasOwnProperty('mail_thread_id')) {
          obj['mail_thread_id'] = _ApiClient["default"].convertToType(data['mail_thread_id'], 'Number');
          delete data['mail_thread_id'];
        }

        if (data.hasOwnProperty('subject')) {
          obj['subject'] = _ApiClient["default"].convertToType(data['subject'], 'String');
          delete data['subject'];
        }

        if (data.hasOwnProperty('snippet')) {
          obj['snippet'] = _ApiClient["default"].convertToType(data['snippet'], 'String');
          delete data['snippet'];
        }

        if (data.hasOwnProperty('mail_tracking_status')) {
          obj['mail_tracking_status'] = _ApiClient["default"].convertToType(data['mail_tracking_status'], 'String');
          delete data['mail_tracking_status'];
        }

        if (data.hasOwnProperty('mail_link_tracking_enabled_flag')) {
          obj['mail_link_tracking_enabled_flag'] = _ApiClient["default"].convertToType(data['mail_link_tracking_enabled_flag'], _NumberBooleanDefault["default"]);
          delete data['mail_link_tracking_enabled_flag'];
        }

        if (data.hasOwnProperty('read_flag')) {
          obj['read_flag'] = _ApiClient["default"].convertToType(data['read_flag'], _NumberBooleanDefault["default"]);
          delete data['read_flag'];
        }

        if (data.hasOwnProperty('draft')) {
          obj['draft'] = _ApiClient["default"].convertToType(data['draft'], 'String');
          delete data['draft'];
        }

        if (data.hasOwnProperty('draft_flag')) {
          obj['draft_flag'] = _ApiClient["default"].convertToType(data['draft_flag'], _NumberBooleanDefault["default"]);
          delete data['draft_flag'];
        }

        if (data.hasOwnProperty('synced_flag')) {
          obj['synced_flag'] = _ApiClient["default"].convertToType(data['synced_flag'], _NumberBooleanDefault["default"]);
          delete data['synced_flag'];
        }

        if (data.hasOwnProperty('deleted_flag')) {
          obj['deleted_flag'] = _ApiClient["default"].convertToType(data['deleted_flag'], _NumberBooleanDefault["default"]);
          delete data['deleted_flag'];
        }

        if (data.hasOwnProperty('has_body_flag')) {
          obj['has_body_flag'] = _ApiClient["default"].convertToType(data['has_body_flag'], _NumberBooleanDefault["default"]);
          delete data['has_body_flag'];
        }

        if (data.hasOwnProperty('sent_flag')) {
          obj['sent_flag'] = _ApiClient["default"].convertToType(data['sent_flag'], _NumberBooleanDefault["default"]);
          delete data['sent_flag'];
        }

        if (data.hasOwnProperty('sent_from_pipedrive_flag')) {
          obj['sent_from_pipedrive_flag'] = _ApiClient["default"].convertToType(data['sent_from_pipedrive_flag'], _NumberBooleanDefault["default"]);
          delete data['sent_from_pipedrive_flag'];
        }

        if (data.hasOwnProperty('smart_bcc_flag')) {
          obj['smart_bcc_flag'] = _ApiClient["default"].convertToType(data['smart_bcc_flag'], _NumberBooleanDefault["default"]);
          delete data['smart_bcc_flag'];
        }

        if (data.hasOwnProperty('message_time')) {
          obj['message_time'] = _ApiClient["default"].convertToType(data['message_time'], 'Date');
          delete data['message_time'];
        }

        if (data.hasOwnProperty('add_time')) {
          obj['add_time'] = _ApiClient["default"].convertToType(data['add_time'], 'Date');
          delete data['add_time'];
        }

        if (data.hasOwnProperty('update_time')) {
          obj['update_time'] = _ApiClient["default"].convertToType(data['update_time'], 'Date');
          delete data['update_time'];
        }

        if (data.hasOwnProperty('has_attachments_flag')) {
          obj['has_attachments_flag'] = _ApiClient["default"].convertToType(data['has_attachments_flag'], _NumberBooleanDefault["default"]);
          delete data['has_attachments_flag'];
        }

        if (data.hasOwnProperty('has_inline_attachments_flag')) {
          obj['has_inline_attachments_flag'] = _ApiClient["default"].convertToType(data['has_inline_attachments_flag'], _NumberBooleanDefault["default"]);
          delete data['has_inline_attachments_flag'];
        }

        if (data.hasOwnProperty('has_real_attachments_flag')) {
          obj['has_real_attachments_flag'] = _ApiClient["default"].convertToType(data['has_real_attachments_flag'], _NumberBooleanDefault["default"]);
          delete data['has_real_attachments_flag'];
        }

        if (data.hasOwnProperty('nylas_id')) {
          obj['nylas_id'] = _ApiClient["default"].convertToType(data['nylas_id'], 'String');
          delete data['nylas_id'];
        }

        if (data.hasOwnProperty('s3_bucket')) {
          obj['s3_bucket'] = _ApiClient["default"].convertToType(data['s3_bucket'], 'String');
          delete data['s3_bucket'];
        }

        if (data.hasOwnProperty('s3_bucket_path')) {
          obj['s3_bucket_path'] = _ApiClient["default"].convertToType(data['s3_bucket_path'], 'String');
          delete data['s3_bucket_path'];
        }

        if (data.hasOwnProperty('external_deleted_flag')) {
          obj['external_deleted_flag'] = _ApiClient["default"].convertToType(data['external_deleted_flag'], 'Boolean');
          delete data['external_deleted_flag'];
        }

        if (data.hasOwnProperty('mua_message_id')) {
          obj['mua_message_id'] = _ApiClient["default"].convertToType(data['mua_message_id'], 'String');
          delete data['mua_message_id'];
        }

        if (data.hasOwnProperty('template_id')) {
          obj['template_id'] = _ApiClient["default"].convertToType(data['template_id'], 'Number');
          delete data['template_id'];
        }

        if (data.hasOwnProperty('timestamp')) {
          obj['timestamp'] = _ApiClient["default"].convertToType(data['timestamp'], 'String');
          delete data['timestamp'];
        }

        if (data.hasOwnProperty('item_type')) {
          obj['item_type'] = _ApiClient["default"].convertToType(data['item_type'], 'String');
          delete data['item_type'];
        }

        if (data.hasOwnProperty('company_id')) {
          obj['company_id'] = _ApiClient["default"].convertToType(data['company_id'], 'Number');
          delete data['company_id'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return MailMessageItemForList;
}();
/**
 * ID of the mail message.
 * @member {Number} id
 */


MailMessageItemForList.prototype['id'] = undefined;
/**
 * The array of mail message sender (object)
 * @member {Array.<module:model/MailParticipant>} from
 */

MailMessageItemForList.prototype['from'] = undefined;
/**
 * The array of mail message receiver (object)
 * @member {Array.<module:model/MailParticipant>} to
 */

MailMessageItemForList.prototype['to'] = undefined;
/**
 * The array of mail message copies (object)
 * @member {Array.<module:model/MailParticipant>} cc
 */

MailMessageItemForList.prototype['cc'] = undefined;
/**
 * The array of mail message blind copies (object)
 * @member {Array.<module:model/MailParticipant>} bcc
 */

MailMessageItemForList.prototype['bcc'] = undefined;
/**
 * The mail message body URL
 * @member {String} body_url
 */

MailMessageItemForList.prototype['body_url'] = undefined;
/**
 * The connection account ID
 * @member {String} account_id
 */

MailMessageItemForList.prototype['account_id'] = undefined;
/**
 * ID of the user whom mail message will be assigned to
 * @member {Number} user_id
 */

MailMessageItemForList.prototype['user_id'] = undefined;
/**
 * ID of the mail message thread
 * @member {Number} mail_thread_id
 */

MailMessageItemForList.prototype['mail_thread_id'] = undefined;
/**
 * The subject of mail message
 * @member {String} subject
 */

MailMessageItemForList.prototype['subject'] = undefined;
/**
 * The snippet of mail message. Snippet length is up to 225 characters.
 * @member {String} snippet
 */

MailMessageItemForList.prototype['snippet'] = undefined;
/**
 * The status of tracking mail message. Value is `null` if tracking is not enabled.
 * @member {module:model/MailMessageItemForList.MailTrackingStatusEnum} mail_tracking_status
 */

MailMessageItemForList.prototype['mail_tracking_status'] = undefined;
/**
 * Whether the link tracking in mail message body is enabled.
 * @member {module:model/NumberBooleanDefault0} mail_link_tracking_enabled_flag
 */

MailMessageItemForList.prototype['mail_link_tracking_enabled_flag'] = undefined;
/**
 * Whether the mail message is read or not by the user
 * @member {module:model/NumberBooleanDefault0} read_flag
 */

MailMessageItemForList.prototype['read_flag'] = undefined;
/**
 * If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
 * @member {String} draft
 */

MailMessageItemForList.prototype['draft'] = undefined;
/**
 * Whether the mail message is a draft or not
 * @member {module:model/NumberBooleanDefault0} draft_flag
 */

MailMessageItemForList.prototype['draft_flag'] = undefined;
/**
 * Whether the mail message is synced with the provider or not
 * @member {module:model/NumberBooleanDefault0} synced_flag
 */

MailMessageItemForList.prototype['synced_flag'] = undefined;
/**
 * Whether the mail message is deleted or not
 * @member {module:model/NumberBooleanDefault0} deleted_flag
 */

MailMessageItemForList.prototype['deleted_flag'] = undefined;
/**
 * Whether the mail message has a body or not
 * @member {module:model/NumberBooleanDefault0} has_body_flag
 */

MailMessageItemForList.prototype['has_body_flag'] = undefined;
/**
 * Whether the mail message has been sent or not
 * @member {module:model/NumberBooleanDefault0} sent_flag
 */

MailMessageItemForList.prototype['sent_flag'] = undefined;
/**
 * Whether the mail message has been sent from Pipedrive app or not
 * @member {module:model/NumberBooleanDefault0} sent_from_pipedrive_flag
 */

MailMessageItemForList.prototype['sent_from_pipedrive_flag'] = undefined;
/**
 * Whether the mail message has been created by Smart Email BCC feature or not
 * @member {module:model/NumberBooleanDefault0} smart_bcc_flag
 */

MailMessageItemForList.prototype['smart_bcc_flag'] = undefined;
/**
 * Creation or receival time of the mail message
 * @member {Date} message_time
 */

MailMessageItemForList.prototype['message_time'] = undefined;
/**
 * The insertion into the database time of the mail message
 * @member {Date} add_time
 */

MailMessageItemForList.prototype['add_time'] = undefined;
/**
 * The updating time in the database of the mail message
 * @member {Date} update_time
 */

MailMessageItemForList.prototype['update_time'] = undefined;
/**
 * Whether the mail message has an attachment or not
 * @member {module:model/NumberBooleanDefault0} has_attachments_flag
 */

MailMessageItemForList.prototype['has_attachments_flag'] = undefined;
/**
 * Whether the mail message has an inline attachment or not
 * @member {module:model/NumberBooleanDefault0} has_inline_attachments_flag
 */

MailMessageItemForList.prototype['has_inline_attachments_flag'] = undefined;
/**
 * Whether the mail message has an attachment (which is not inline) or not
 * @member {module:model/NumberBooleanDefault0} has_real_attachments_flag
 */

MailMessageItemForList.prototype['has_real_attachments_flag'] = undefined;
/**
 * The Mail Message ID assigned by the sync provider
 * @member {String} nylas_id
 */

MailMessageItemForList.prototype['nylas_id'] = undefined;
/**
 * The name of the S3 bucket
 * @member {String} s3_bucket
 */

MailMessageItemForList.prototype['s3_bucket'] = undefined;
/**
 * The path of the S3 bucket
 * @member {String} s3_bucket_path
 */

MailMessageItemForList.prototype['s3_bucket_path'] = undefined;
/**
 * If the Mail Message has been deleted on the provider side or not
 * @member {Boolean} external_deleted_flag
 */

MailMessageItemForList.prototype['external_deleted_flag'] = undefined;
/**
 * The Mail Message ID assigned by the mail user agent
 * @member {String} mua_message_id
 */

MailMessageItemForList.prototype['mua_message_id'] = undefined;
/**
 * The ID of the mail template
 * @member {Number} template_id
 */

MailMessageItemForList.prototype['template_id'] = undefined;
/**
 * The add date and time of the Mail Message
 * @member {String} timestamp
 */

MailMessageItemForList.prototype['timestamp'] = undefined;
/**
 * The type of the data item
 * @member {String} item_type
 */

MailMessageItemForList.prototype['item_type'] = undefined;
/**
 * The ID of the company
 * @member {Number} company_id
 */

MailMessageItemForList.prototype['company_id'] = undefined; // Implement MailMessageData interface:

/**
 * ID of the mail message.
 * @member {Number} id
 */

_MailMessageData["default"].prototype['id'] = undefined;
/**
 * The array of mail message sender (object)
 * @member {Array.<module:model/MailParticipant>} from
 */

_MailMessageData["default"].prototype['from'] = undefined;
/**
 * The array of mail message receiver (object)
 * @member {Array.<module:model/MailParticipant>} to
 */

_MailMessageData["default"].prototype['to'] = undefined;
/**
 * The array of mail message copies (object)
 * @member {Array.<module:model/MailParticipant>} cc
 */

_MailMessageData["default"].prototype['cc'] = undefined;
/**
 * The array of mail message blind copies (object)
 * @member {Array.<module:model/MailParticipant>} bcc
 */

_MailMessageData["default"].prototype['bcc'] = undefined;
/**
 * The mail message body URL
 * @member {String} body_url
 */

_MailMessageData["default"].prototype['body_url'] = undefined;
/**
 * The connection account ID
 * @member {String} account_id
 */

_MailMessageData["default"].prototype['account_id'] = undefined;
/**
 * ID of the user whom mail message will be assigned to
 * @member {Number} user_id
 */

_MailMessageData["default"].prototype['user_id'] = undefined;
/**
 * ID of the mail message thread
 * @member {Number} mail_thread_id
 */

_MailMessageData["default"].prototype['mail_thread_id'] = undefined;
/**
 * The subject of mail message
 * @member {String} subject
 */

_MailMessageData["default"].prototype['subject'] = undefined;
/**
 * The snippet of mail message. Snippet length is up to 225 characters.
 * @member {String} snippet
 */

_MailMessageData["default"].prototype['snippet'] = undefined;
/**
 * The status of tracking mail message. Value is `null` if tracking is not enabled.
 * @member {module:model/MailMessageData.MailTrackingStatusEnum} mail_tracking_status
 */

_MailMessageData["default"].prototype['mail_tracking_status'] = undefined;
/**
 * Whether the link tracking in mail message body is enabled.
 * @member {module:model/NumberBooleanDefault0} mail_link_tracking_enabled_flag
 */

_MailMessageData["default"].prototype['mail_link_tracking_enabled_flag'] = undefined;
/**
 * Whether the mail message is read or not by the user
 * @member {module:model/NumberBooleanDefault0} read_flag
 */

_MailMessageData["default"].prototype['read_flag'] = undefined;
/**
 * If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
 * @member {String} draft
 */

_MailMessageData["default"].prototype['draft'] = undefined;
/**
 * Whether the mail message is a draft or not
 * @member {module:model/NumberBooleanDefault0} draft_flag
 */

_MailMessageData["default"].prototype['draft_flag'] = undefined;
/**
 * Whether the mail message is synced with the provider or not
 * @member {module:model/NumberBooleanDefault0} synced_flag
 */

_MailMessageData["default"].prototype['synced_flag'] = undefined;
/**
 * Whether the mail message is deleted or not
 * @member {module:model/NumberBooleanDefault0} deleted_flag
 */

_MailMessageData["default"].prototype['deleted_flag'] = undefined;
/**
 * Whether the mail message has a body or not
 * @member {module:model/NumberBooleanDefault0} has_body_flag
 */

_MailMessageData["default"].prototype['has_body_flag'] = undefined;
/**
 * Whether the mail message has been sent or not
 * @member {module:model/NumberBooleanDefault0} sent_flag
 */

_MailMessageData["default"].prototype['sent_flag'] = undefined;
/**
 * Whether the mail message has been sent from Pipedrive app or not
 * @member {module:model/NumberBooleanDefault0} sent_from_pipedrive_flag
 */

_MailMessageData["default"].prototype['sent_from_pipedrive_flag'] = undefined;
/**
 * Whether the mail message has been created by Smart Email BCC feature or not
 * @member {module:model/NumberBooleanDefault0} smart_bcc_flag
 */

_MailMessageData["default"].prototype['smart_bcc_flag'] = undefined;
/**
 * Creation or receival time of the mail message
 * @member {Date} message_time
 */

_MailMessageData["default"].prototype['message_time'] = undefined;
/**
 * The insertion into the database time of the mail message
 * @member {Date} add_time
 */

_MailMessageData["default"].prototype['add_time'] = undefined;
/**
 * The updating time in the database of the mail message
 * @member {Date} update_time
 */

_MailMessageData["default"].prototype['update_time'] = undefined;
/**
 * Whether the mail message has an attachment or not
 * @member {module:model/NumberBooleanDefault0} has_attachments_flag
 */

_MailMessageData["default"].prototype['has_attachments_flag'] = undefined;
/**
 * Whether the mail message has an inline attachment or not
 * @member {module:model/NumberBooleanDefault0} has_inline_attachments_flag
 */

_MailMessageData["default"].prototype['has_inline_attachments_flag'] = undefined;
/**
 * Whether the mail message has an attachment (which is not inline) or not
 * @member {module:model/NumberBooleanDefault0} has_real_attachments_flag
 */

_MailMessageData["default"].prototype['has_real_attachments_flag'] = undefined; // Implement MailMessageItemForListAllOf interface:

/**
 * The Mail Message ID assigned by the sync provider
 * @member {String} nylas_id
 */

_MailMessageItemForListAllOf["default"].prototype['nylas_id'] = undefined;
/**
 * The name of the S3 bucket
 * @member {String} s3_bucket
 */

_MailMessageItemForListAllOf["default"].prototype['s3_bucket'] = undefined;
/**
 * The path of the S3 bucket
 * @member {String} s3_bucket_path
 */

_MailMessageItemForListAllOf["default"].prototype['s3_bucket_path'] = undefined;
/**
 * If the Mail Message has been deleted on the provider side or not
 * @member {Boolean} external_deleted_flag
 */

_MailMessageItemForListAllOf["default"].prototype['external_deleted_flag'] = undefined;
/**
 * The Mail Message ID assigned by the mail user agent
 * @member {String} mua_message_id
 */

_MailMessageItemForListAllOf["default"].prototype['mua_message_id'] = undefined;
/**
 * The ID of the mail template
 * @member {Number} template_id
 */

_MailMessageItemForListAllOf["default"].prototype['template_id'] = undefined;
/**
 * The add date and time of the Mail Message
 * @member {String} timestamp
 */

_MailMessageItemForListAllOf["default"].prototype['timestamp'] = undefined;
/**
 * The type of the data item
 * @member {String} item_type
 */

_MailMessageItemForListAllOf["default"].prototype['item_type'] = undefined;
/**
 * The ID of the company
 * @member {Number} company_id
 */

_MailMessageItemForListAllOf["default"].prototype['company_id'] = undefined;
/**
 * Allowed values for the <code>mail_tracking_status</code> property.
 * @enum {String}
 * @readonly
 */

MailMessageItemForList['MailTrackingStatusEnum'] = {
  /**
   * value: "opened"
   * @const
   */
  "opened": "opened",

  /**
   * value: "not opened"
   * @const
   */
  "not opened": "not opened"
};
var _default = MailMessageItemForList;
exports["default"] = _default;