"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _BaseDeal = _interopRequireDefault(require("./BaseDeal"));

var _DealNonStrictModeFields = _interopRequireDefault(require("./DealNonStrictModeFields"));

var _DealNonStrictModeFieldsCreatorUserId = _interopRequireDefault(require("./DealNonStrictModeFieldsCreatorUserId"));

var _DealOrganizationDataWithId = _interopRequireDefault(require("./DealOrganizationDataWithId"));

var _DealPersonDataWithId = _interopRequireDefault(require("./DealPersonDataWithId"));

var _DealUserDataWithId = _interopRequireDefault(require("./DealUserDataWithId"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The DealNonStrict model module.
 * @module model/DealNonStrict
 * @version 1.0.0
 */
var DealNonStrict = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>DealNonStrict</code>.
   * @alias module:model/DealNonStrict
   * @implements module:model/DealNonStrictModeFields
   * @implements module:model/BaseDeal
   */
  function DealNonStrict() {
    (0, _classCallCheck2["default"])(this, DealNonStrict);

    _DealNonStrictModeFields["default"].initialize(this);

    _BaseDeal["default"].initialize(this);

    DealNonStrict.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(DealNonStrict, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>DealNonStrict</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DealNonStrict} obj Optional instance to populate.
     * @return {module:model/DealNonStrict} The populated <code>DealNonStrict</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new DealNonStrict();

        _DealNonStrictModeFields["default"].constructFromObject(data, obj);

        _BaseDeal["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
          delete data['id'];
        }

        if (data.hasOwnProperty('creator_user_id')) {
          obj['creator_user_id'] = _DealNonStrictModeFieldsCreatorUserId["default"].constructFromObject(data['creator_user_id']);
          delete data['creator_user_id'];
        }

        if (data.hasOwnProperty('user_id')) {
          obj['user_id'] = _DealUserDataWithId["default"].constructFromObject(data['user_id']);
          delete data['user_id'];
        }

        if (data.hasOwnProperty('person_id')) {
          obj['person_id'] = _DealPersonDataWithId["default"].constructFromObject(data['person_id']);
          delete data['person_id'];
        }

        if (data.hasOwnProperty('org_id')) {
          obj['org_id'] = _DealOrganizationDataWithId["default"].constructFromObject(data['org_id']);
          delete data['org_id'];
        }

        if (data.hasOwnProperty('stage_id')) {
          obj['stage_id'] = _ApiClient["default"].convertToType(data['stage_id'], 'Number');
          delete data['stage_id'];
        }

        if (data.hasOwnProperty('title')) {
          obj['title'] = _ApiClient["default"].convertToType(data['title'], 'String');
          delete data['title'];
        }

        if (data.hasOwnProperty('value')) {
          obj['value'] = _ApiClient["default"].convertToType(data['value'], 'Number');
          delete data['value'];
        }

        if (data.hasOwnProperty('currency')) {
          obj['currency'] = _ApiClient["default"].convertToType(data['currency'], 'String');
          delete data['currency'];
        }

        if (data.hasOwnProperty('add_time')) {
          obj['add_time'] = _ApiClient["default"].convertToType(data['add_time'], 'String');
          delete data['add_time'];
        }

        if (data.hasOwnProperty('update_time')) {
          obj['update_time'] = _ApiClient["default"].convertToType(data['update_time'], 'String');
          delete data['update_time'];
        }

        if (data.hasOwnProperty('stage_change_time')) {
          obj['stage_change_time'] = _ApiClient["default"].convertToType(data['stage_change_time'], 'String');
          delete data['stage_change_time'];
        }

        if (data.hasOwnProperty('active')) {
          obj['active'] = _ApiClient["default"].convertToType(data['active'], 'Boolean');
          delete data['active'];
        }

        if (data.hasOwnProperty('deleted')) {
          obj['deleted'] = _ApiClient["default"].convertToType(data['deleted'], 'Boolean');
          delete data['deleted'];
        }

        if (data.hasOwnProperty('status')) {
          obj['status'] = _ApiClient["default"].convertToType(data['status'], 'String');
          delete data['status'];
        }

        if (data.hasOwnProperty('probability')) {
          obj['probability'] = _ApiClient["default"].convertToType(data['probability'], 'Number');
          delete data['probability'];
        }

        if (data.hasOwnProperty('next_activity_date')) {
          obj['next_activity_date'] = _ApiClient["default"].convertToType(data['next_activity_date'], 'String');
          delete data['next_activity_date'];
        }

        if (data.hasOwnProperty('next_activity_time')) {
          obj['next_activity_time'] = _ApiClient["default"].convertToType(data['next_activity_time'], 'String');
          delete data['next_activity_time'];
        }

        if (data.hasOwnProperty('next_activity_id')) {
          obj['next_activity_id'] = _ApiClient["default"].convertToType(data['next_activity_id'], 'Number');
          delete data['next_activity_id'];
        }

        if (data.hasOwnProperty('last_activity_id')) {
          obj['last_activity_id'] = _ApiClient["default"].convertToType(data['last_activity_id'], 'Number');
          delete data['last_activity_id'];
        }

        if (data.hasOwnProperty('last_activity_date')) {
          obj['last_activity_date'] = _ApiClient["default"].convertToType(data['last_activity_date'], 'String');
          delete data['last_activity_date'];
        }

        if (data.hasOwnProperty('lost_reason')) {
          obj['lost_reason'] = _ApiClient["default"].convertToType(data['lost_reason'], 'String');
          delete data['lost_reason'];
        }

        if (data.hasOwnProperty('visible_to')) {
          obj['visible_to'] = _ApiClient["default"].convertToType(data['visible_to'], 'String');
          delete data['visible_to'];
        }

        if (data.hasOwnProperty('close_time')) {
          obj['close_time'] = _ApiClient["default"].convertToType(data['close_time'], 'String');
          delete data['close_time'];
        }

        if (data.hasOwnProperty('pipeline_id')) {
          obj['pipeline_id'] = _ApiClient["default"].convertToType(data['pipeline_id'], 'Number');
          delete data['pipeline_id'];
        }

        if (data.hasOwnProperty('won_time')) {
          obj['won_time'] = _ApiClient["default"].convertToType(data['won_time'], 'String');
          delete data['won_time'];
        }

        if (data.hasOwnProperty('first_won_time')) {
          obj['first_won_time'] = _ApiClient["default"].convertToType(data['first_won_time'], 'String');
          delete data['first_won_time'];
        }

        if (data.hasOwnProperty('lost_time')) {
          obj['lost_time'] = _ApiClient["default"].convertToType(data['lost_time'], 'String');
          delete data['lost_time'];
        }

        if (data.hasOwnProperty('products_count')) {
          obj['products_count'] = _ApiClient["default"].convertToType(data['products_count'], 'Number');
          delete data['products_count'];
        }

        if (data.hasOwnProperty('files_count')) {
          obj['files_count'] = _ApiClient["default"].convertToType(data['files_count'], 'Number');
          delete data['files_count'];
        }

        if (data.hasOwnProperty('notes_count')) {
          obj['notes_count'] = _ApiClient["default"].convertToType(data['notes_count'], 'Number');
          delete data['notes_count'];
        }

        if (data.hasOwnProperty('followers_count')) {
          obj['followers_count'] = _ApiClient["default"].convertToType(data['followers_count'], 'Number');
          delete data['followers_count'];
        }

        if (data.hasOwnProperty('email_messages_count')) {
          obj['email_messages_count'] = _ApiClient["default"].convertToType(data['email_messages_count'], 'Number');
          delete data['email_messages_count'];
        }

        if (data.hasOwnProperty('activities_count')) {
          obj['activities_count'] = _ApiClient["default"].convertToType(data['activities_count'], 'Number');
          delete data['activities_count'];
        }

        if (data.hasOwnProperty('done_activities_count')) {
          obj['done_activities_count'] = _ApiClient["default"].convertToType(data['done_activities_count'], 'Number');
          delete data['done_activities_count'];
        }

        if (data.hasOwnProperty('undone_activities_count')) {
          obj['undone_activities_count'] = _ApiClient["default"].convertToType(data['undone_activities_count'], 'Number');
          delete data['undone_activities_count'];
        }

        if (data.hasOwnProperty('participants_count')) {
          obj['participants_count'] = _ApiClient["default"].convertToType(data['participants_count'], 'Number');
          delete data['participants_count'];
        }

        if (data.hasOwnProperty('expected_close_date')) {
          obj['expected_close_date'] = _ApiClient["default"].convertToType(data['expected_close_date'], 'Date');
          delete data['expected_close_date'];
        }

        if (data.hasOwnProperty('last_incoming_mail_time')) {
          obj['last_incoming_mail_time'] = _ApiClient["default"].convertToType(data['last_incoming_mail_time'], 'String');
          delete data['last_incoming_mail_time'];
        }

        if (data.hasOwnProperty('last_outgoing_mail_time')) {
          obj['last_outgoing_mail_time'] = _ApiClient["default"].convertToType(data['last_outgoing_mail_time'], 'String');
          delete data['last_outgoing_mail_time'];
        }

        if (data.hasOwnProperty('label')) {
          obj['label'] = _ApiClient["default"].convertToType(data['label'], 'String');
          delete data['label'];
        }

        if (data.hasOwnProperty('stage_order_nr')) {
          obj['stage_order_nr'] = _ApiClient["default"].convertToType(data['stage_order_nr'], 'Number');
          delete data['stage_order_nr'];
        }

        if (data.hasOwnProperty('person_name')) {
          obj['person_name'] = _ApiClient["default"].convertToType(data['person_name'], 'String');
          delete data['person_name'];
        }

        if (data.hasOwnProperty('org_name')) {
          obj['org_name'] = _ApiClient["default"].convertToType(data['org_name'], 'String');
          delete data['org_name'];
        }

        if (data.hasOwnProperty('next_activity_subject')) {
          obj['next_activity_subject'] = _ApiClient["default"].convertToType(data['next_activity_subject'], 'String');
          delete data['next_activity_subject'];
        }

        if (data.hasOwnProperty('next_activity_type')) {
          obj['next_activity_type'] = _ApiClient["default"].convertToType(data['next_activity_type'], 'String');
          delete data['next_activity_type'];
        }

        if (data.hasOwnProperty('next_activity_duration')) {
          obj['next_activity_duration'] = _ApiClient["default"].convertToType(data['next_activity_duration'], 'String');
          delete data['next_activity_duration'];
        }

        if (data.hasOwnProperty('next_activity_note')) {
          obj['next_activity_note'] = _ApiClient["default"].convertToType(data['next_activity_note'], 'String');
          delete data['next_activity_note'];
        }

        if (data.hasOwnProperty('formatted_value')) {
          obj['formatted_value'] = _ApiClient["default"].convertToType(data['formatted_value'], 'String');
          delete data['formatted_value'];
        }

        if (data.hasOwnProperty('weighted_value')) {
          obj['weighted_value'] = _ApiClient["default"].convertToType(data['weighted_value'], 'Number');
          delete data['weighted_value'];
        }

        if (data.hasOwnProperty('formatted_weighted_value')) {
          obj['formatted_weighted_value'] = _ApiClient["default"].convertToType(data['formatted_weighted_value'], 'String');
          delete data['formatted_weighted_value'];
        }

        if (data.hasOwnProperty('weighted_value_currency')) {
          obj['weighted_value_currency'] = _ApiClient["default"].convertToType(data['weighted_value_currency'], 'String');
          delete data['weighted_value_currency'];
        }

        if (data.hasOwnProperty('rotten_time')) {
          obj['rotten_time'] = _ApiClient["default"].convertToType(data['rotten_time'], 'String');
          delete data['rotten_time'];
        }

        if (data.hasOwnProperty('owner_name')) {
          obj['owner_name'] = _ApiClient["default"].convertToType(data['owner_name'], 'String');
          delete data['owner_name'];
        }

        if (data.hasOwnProperty('cc_email')) {
          obj['cc_email'] = _ApiClient["default"].convertToType(data['cc_email'], 'String');
          delete data['cc_email'];
        }

        if (data.hasOwnProperty('org_hidden')) {
          obj['org_hidden'] = _ApiClient["default"].convertToType(data['org_hidden'], 'Boolean');
          delete data['org_hidden'];
        }

        if (data.hasOwnProperty('person_hidden')) {
          obj['person_hidden'] = _ApiClient["default"].convertToType(data['person_hidden'], 'Boolean');
          delete data['person_hidden'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return DealNonStrict;
}();
/**
 * The ID of the deal
 * @member {Number} id
 */


DealNonStrict.prototype['id'] = undefined;
/**
 * @member {module:model/DealNonStrictModeFieldsCreatorUserId} creator_user_id
 */

DealNonStrict.prototype['creator_user_id'] = undefined;
/**
 * @member {module:model/DealUserDataWithId} user_id
 */

DealNonStrict.prototype['user_id'] = undefined;
/**
 * @member {module:model/DealPersonDataWithId} person_id
 */

DealNonStrict.prototype['person_id'] = undefined;
/**
 * @member {module:model/DealOrganizationDataWithId} org_id
 */

DealNonStrict.prototype['org_id'] = undefined;
/**
 * The ID of the deal stage
 * @member {Number} stage_id
 */

DealNonStrict.prototype['stage_id'] = undefined;
/**
 * The title of the deal
 * @member {String} title
 */

DealNonStrict.prototype['title'] = undefined;
/**
 * The value of the deal
 * @member {Number} value
 */

DealNonStrict.prototype['value'] = undefined;
/**
 * The currency associated with the deal
 * @member {String} currency
 */

DealNonStrict.prototype['currency'] = undefined;
/**
 * The creation date and time of the deal
 * @member {String} add_time
 */

DealNonStrict.prototype['add_time'] = undefined;
/**
 * The last updated date and time of the deal
 * @member {String} update_time
 */

DealNonStrict.prototype['update_time'] = undefined;
/**
 * The last updated date and time of the deal stage
 * @member {String} stage_change_time
 */

DealNonStrict.prototype['stage_change_time'] = undefined;
/**
 * Whether the deal is active or not
 * @member {Boolean} active
 */

DealNonStrict.prototype['active'] = undefined;
/**
 * Whether the deal is deleted or not
 * @member {Boolean} deleted
 */

DealNonStrict.prototype['deleted'] = undefined;
/**
 * The status of the deal
 * @member {String} status
 */

DealNonStrict.prototype['status'] = undefined;
/**
 * The success probability percentage of the deal
 * @member {Number} probability
 */

DealNonStrict.prototype['probability'] = undefined;
/**
 * The date of the next activity associated with the deal
 * @member {String} next_activity_date
 */

DealNonStrict.prototype['next_activity_date'] = undefined;
/**
 * The time of the next activity associated with the deal
 * @member {String} next_activity_time
 */

DealNonStrict.prototype['next_activity_time'] = undefined;
/**
 * The ID of the next activity associated with the deal
 * @member {Number} next_activity_id
 */

DealNonStrict.prototype['next_activity_id'] = undefined;
/**
 * The ID of the last activity associated with the deal
 * @member {Number} last_activity_id
 */

DealNonStrict.prototype['last_activity_id'] = undefined;
/**
 * The date of the last activity associated with the deal
 * @member {String} last_activity_date
 */

DealNonStrict.prototype['last_activity_date'] = undefined;
/**
 * The reason for losing the deal
 * @member {String} lost_reason
 */

DealNonStrict.prototype['lost_reason'] = undefined;
/**
 * The visibility of the deal
 * @member {String} visible_to
 */

DealNonStrict.prototype['visible_to'] = undefined;
/**
 * The date and time of closing the deal
 * @member {String} close_time
 */

DealNonStrict.prototype['close_time'] = undefined;
/**
 * The ID of pipeline associated with the deal
 * @member {Number} pipeline_id
 */

DealNonStrict.prototype['pipeline_id'] = undefined;
/**
 * The date and time of changing the deal status as won
 * @member {String} won_time
 */

DealNonStrict.prototype['won_time'] = undefined;
/**
 * The date and time of the first time changing the deal status as won
 * @member {String} first_won_time
 */

DealNonStrict.prototype['first_won_time'] = undefined;
/**
 * The date and time of changing the deal status as lost
 * @member {String} lost_time
 */

DealNonStrict.prototype['lost_time'] = undefined;
/**
 * The number of products associated with the deal
 * @member {Number} products_count
 */

DealNonStrict.prototype['products_count'] = undefined;
/**
 * The number of files associated with the deal
 * @member {Number} files_count
 */

DealNonStrict.prototype['files_count'] = undefined;
/**
 * The number of notes associated with the deal
 * @member {Number} notes_count
 */

DealNonStrict.prototype['notes_count'] = undefined;
/**
 * The number of followers associated with the deal
 * @member {Number} followers_count
 */

DealNonStrict.prototype['followers_count'] = undefined;
/**
 * The number of emails associated with the deal
 * @member {Number} email_messages_count
 */

DealNonStrict.prototype['email_messages_count'] = undefined;
/**
 * The number of activities associated with the deal
 * @member {Number} activities_count
 */

DealNonStrict.prototype['activities_count'] = undefined;
/**
 * The number of completed activities associated with the deal
 * @member {Number} done_activities_count
 */

DealNonStrict.prototype['done_activities_count'] = undefined;
/**
 * The number of incomplete activities associated with the deal
 * @member {Number} undone_activities_count
 */

DealNonStrict.prototype['undone_activities_count'] = undefined;
/**
 * The number of participants associated with the deal
 * @member {Number} participants_count
 */

DealNonStrict.prototype['participants_count'] = undefined;
/**
 * The expected close date of the deal
 * @member {Date} expected_close_date
 */

DealNonStrict.prototype['expected_close_date'] = undefined;
/**
 * The date and time of the last incoming email associated with the deal
 * @member {String} last_incoming_mail_time
 */

DealNonStrict.prototype['last_incoming_mail_time'] = undefined;
/**
 * The date and time of the last outgoing email associated with the deal
 * @member {String} last_outgoing_mail_time
 */

DealNonStrict.prototype['last_outgoing_mail_time'] = undefined;
/**
 * The label assigned to the deal
 * @member {String} label
 */

DealNonStrict.prototype['label'] = undefined;
/**
 * The order number of the deal stage associated with the deal
 * @member {Number} stage_order_nr
 */

DealNonStrict.prototype['stage_order_nr'] = undefined;
/**
 * The name of the person associated with the deal
 * @member {String} person_name
 */

DealNonStrict.prototype['person_name'] = undefined;
/**
 * The name of the organization associated with the deal
 * @member {String} org_name
 */

DealNonStrict.prototype['org_name'] = undefined;
/**
 * The subject of the next activity associated with the deal
 * @member {String} next_activity_subject
 */

DealNonStrict.prototype['next_activity_subject'] = undefined;
/**
 * The type of the next activity associated with the deal
 * @member {String} next_activity_type
 */

DealNonStrict.prototype['next_activity_type'] = undefined;
/**
 * The duration of the next activity associated with the deal
 * @member {String} next_activity_duration
 */

DealNonStrict.prototype['next_activity_duration'] = undefined;
/**
 * The note of the next activity associated with the deal
 * @member {String} next_activity_note
 */

DealNonStrict.prototype['next_activity_note'] = undefined;
/**
 * The deal value formatted with selected currency. E.g. US$500
 * @member {String} formatted_value
 */

DealNonStrict.prototype['formatted_value'] = undefined;
/**
 * Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
 * @member {Number} weighted_value
 */

DealNonStrict.prototype['weighted_value'] = undefined;
/**
 * The weighted_value formatted with selected currency. E.g. US$500
 * @member {String} formatted_weighted_value
 */

DealNonStrict.prototype['formatted_weighted_value'] = undefined;
/**
 * The currency associated with the deal
 * @member {String} weighted_value_currency
 */

DealNonStrict.prototype['weighted_value_currency'] = undefined;
/**
 * The date and time of changing the deal status as rotten
 * @member {String} rotten_time
 */

DealNonStrict.prototype['rotten_time'] = undefined;
/**
 * The name of the deal owner
 * @member {String} owner_name
 */

DealNonStrict.prototype['owner_name'] = undefined;
/**
 * The BCC email of the deal
 * @member {String} cc_email
 */

DealNonStrict.prototype['cc_email'] = undefined;
/**
 * If the organization that is associated with the deal is hidden or not
 * @member {Boolean} org_hidden
 */

DealNonStrict.prototype['org_hidden'] = undefined;
/**
 * If the person that is associated with the deal is hidden or not
 * @member {Boolean} person_hidden
 */

DealNonStrict.prototype['person_hidden'] = undefined; // Implement DealNonStrictModeFields interface:

/**
 * The ID of the deal
 * @member {Number} id
 */

_DealNonStrictModeFields["default"].prototype['id'] = undefined;
/**
 * @member {module:model/DealNonStrictModeFieldsCreatorUserId} creator_user_id
 */

_DealNonStrictModeFields["default"].prototype['creator_user_id'] = undefined;
/**
 * @member {module:model/DealUserDataWithId} user_id
 */

_DealNonStrictModeFields["default"].prototype['user_id'] = undefined;
/**
 * @member {module:model/DealPersonDataWithId} person_id
 */

_DealNonStrictModeFields["default"].prototype['person_id'] = undefined;
/**
 * @member {module:model/DealOrganizationDataWithId} org_id
 */

_DealNonStrictModeFields["default"].prototype['org_id'] = undefined; // Implement BaseDeal interface:

/**
 * The ID of the deal stage
 * @member {Number} stage_id
 */

_BaseDeal["default"].prototype['stage_id'] = undefined;
/**
 * The title of the deal
 * @member {String} title
 */

_BaseDeal["default"].prototype['title'] = undefined;
/**
 * The value of the deal
 * @member {Number} value
 */

_BaseDeal["default"].prototype['value'] = undefined;
/**
 * The currency associated with the deal
 * @member {String} currency
 */

_BaseDeal["default"].prototype['currency'] = undefined;
/**
 * The creation date and time of the deal
 * @member {String} add_time
 */

_BaseDeal["default"].prototype['add_time'] = undefined;
/**
 * The last updated date and time of the deal
 * @member {String} update_time
 */

_BaseDeal["default"].prototype['update_time'] = undefined;
/**
 * The last updated date and time of the deal stage
 * @member {String} stage_change_time
 */

_BaseDeal["default"].prototype['stage_change_time'] = undefined;
/**
 * Whether the deal is active or not
 * @member {Boolean} active
 */

_BaseDeal["default"].prototype['active'] = undefined;
/**
 * Whether the deal is deleted or not
 * @member {Boolean} deleted
 */

_BaseDeal["default"].prototype['deleted'] = undefined;
/**
 * The status of the deal
 * @member {String} status
 */

_BaseDeal["default"].prototype['status'] = undefined;
/**
 * The success probability percentage of the deal
 * @member {Number} probability
 */

_BaseDeal["default"].prototype['probability'] = undefined;
/**
 * The date of the next activity associated with the deal
 * @member {String} next_activity_date
 */

_BaseDeal["default"].prototype['next_activity_date'] = undefined;
/**
 * The time of the next activity associated with the deal
 * @member {String} next_activity_time
 */

_BaseDeal["default"].prototype['next_activity_time'] = undefined;
/**
 * The ID of the next activity associated with the deal
 * @member {Number} next_activity_id
 */

_BaseDeal["default"].prototype['next_activity_id'] = undefined;
/**
 * The ID of the last activity associated with the deal
 * @member {Number} last_activity_id
 */

_BaseDeal["default"].prototype['last_activity_id'] = undefined;
/**
 * The date of the last activity associated with the deal
 * @member {String} last_activity_date
 */

_BaseDeal["default"].prototype['last_activity_date'] = undefined;
/**
 * The reason for losing the deal
 * @member {String} lost_reason
 */

_BaseDeal["default"].prototype['lost_reason'] = undefined;
/**
 * The visibility of the deal
 * @member {String} visible_to
 */

_BaseDeal["default"].prototype['visible_to'] = undefined;
/**
 * The date and time of closing the deal
 * @member {String} close_time
 */

_BaseDeal["default"].prototype['close_time'] = undefined;
/**
 * The ID of pipeline associated with the deal
 * @member {Number} pipeline_id
 */

_BaseDeal["default"].prototype['pipeline_id'] = undefined;
/**
 * The date and time of changing the deal status as won
 * @member {String} won_time
 */

_BaseDeal["default"].prototype['won_time'] = undefined;
/**
 * The date and time of the first time changing the deal status as won
 * @member {String} first_won_time
 */

_BaseDeal["default"].prototype['first_won_time'] = undefined;
/**
 * The date and time of changing the deal status as lost
 * @member {String} lost_time
 */

_BaseDeal["default"].prototype['lost_time'] = undefined;
/**
 * The number of products associated with the deal
 * @member {Number} products_count
 */

_BaseDeal["default"].prototype['products_count'] = undefined;
/**
 * The number of files associated with the deal
 * @member {Number} files_count
 */

_BaseDeal["default"].prototype['files_count'] = undefined;
/**
 * The number of notes associated with the deal
 * @member {Number} notes_count
 */

_BaseDeal["default"].prototype['notes_count'] = undefined;
/**
 * The number of followers associated with the deal
 * @member {Number} followers_count
 */

_BaseDeal["default"].prototype['followers_count'] = undefined;
/**
 * The number of emails associated with the deal
 * @member {Number} email_messages_count
 */

_BaseDeal["default"].prototype['email_messages_count'] = undefined;
/**
 * The number of activities associated with the deal
 * @member {Number} activities_count
 */

_BaseDeal["default"].prototype['activities_count'] = undefined;
/**
 * The number of completed activities associated with the deal
 * @member {Number} done_activities_count
 */

_BaseDeal["default"].prototype['done_activities_count'] = undefined;
/**
 * The number of incomplete activities associated with the deal
 * @member {Number} undone_activities_count
 */

_BaseDeal["default"].prototype['undone_activities_count'] = undefined;
/**
 * The number of participants associated with the deal
 * @member {Number} participants_count
 */

_BaseDeal["default"].prototype['participants_count'] = undefined;
/**
 * The expected close date of the deal
 * @member {Date} expected_close_date
 */

_BaseDeal["default"].prototype['expected_close_date'] = undefined;
/**
 * The date and time of the last incoming email associated with the deal
 * @member {String} last_incoming_mail_time
 */

_BaseDeal["default"].prototype['last_incoming_mail_time'] = undefined;
/**
 * The date and time of the last outgoing email associated with the deal
 * @member {String} last_outgoing_mail_time
 */

_BaseDeal["default"].prototype['last_outgoing_mail_time'] = undefined;
/**
 * The label assigned to the deal
 * @member {String} label
 */

_BaseDeal["default"].prototype['label'] = undefined;
/**
 * The order number of the deal stage associated with the deal
 * @member {Number} stage_order_nr
 */

_BaseDeal["default"].prototype['stage_order_nr'] = undefined;
/**
 * The name of the person associated with the deal
 * @member {String} person_name
 */

_BaseDeal["default"].prototype['person_name'] = undefined;
/**
 * The name of the organization associated with the deal
 * @member {String} org_name
 */

_BaseDeal["default"].prototype['org_name'] = undefined;
/**
 * The subject of the next activity associated with the deal
 * @member {String} next_activity_subject
 */

_BaseDeal["default"].prototype['next_activity_subject'] = undefined;
/**
 * The type of the next activity associated with the deal
 * @member {String} next_activity_type
 */

_BaseDeal["default"].prototype['next_activity_type'] = undefined;
/**
 * The duration of the next activity associated with the deal
 * @member {String} next_activity_duration
 */

_BaseDeal["default"].prototype['next_activity_duration'] = undefined;
/**
 * The note of the next activity associated with the deal
 * @member {String} next_activity_note
 */

_BaseDeal["default"].prototype['next_activity_note'] = undefined;
/**
 * The deal value formatted with selected currency. E.g. US$500
 * @member {String} formatted_value
 */

_BaseDeal["default"].prototype['formatted_value'] = undefined;
/**
 * Probability times deal value. Probability can either be deal probability or if not set, then stage probability.
 * @member {Number} weighted_value
 */

_BaseDeal["default"].prototype['weighted_value'] = undefined;
/**
 * The weighted_value formatted with selected currency. E.g. US$500
 * @member {String} formatted_weighted_value
 */

_BaseDeal["default"].prototype['formatted_weighted_value'] = undefined;
/**
 * The currency associated with the deal
 * @member {String} weighted_value_currency
 */

_BaseDeal["default"].prototype['weighted_value_currency'] = undefined;
/**
 * The date and time of changing the deal status as rotten
 * @member {String} rotten_time
 */

_BaseDeal["default"].prototype['rotten_time'] = undefined;
/**
 * The name of the deal owner
 * @member {String} owner_name
 */

_BaseDeal["default"].prototype['owner_name'] = undefined;
/**
 * The BCC email of the deal
 * @member {String} cc_email
 */

_BaseDeal["default"].prototype['cc_email'] = undefined;
/**
 * If the organization that is associated with the deal is hidden or not
 * @member {Boolean} org_hidden
 */

_BaseDeal["default"].prototype['org_hidden'] = undefined;
/**
 * If the person that is associated with the deal is hidden or not
 * @member {Boolean} person_hidden
 */

_BaseDeal["default"].prototype['person_hidden'] = undefined;
var _default = DealNonStrict;
exports["default"] = _default;