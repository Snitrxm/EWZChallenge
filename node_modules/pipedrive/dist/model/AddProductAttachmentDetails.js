"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _AddProductAttachmentDetailsAllOf = _interopRequireDefault(require("./AddProductAttachmentDetailsAllOf"));

var _NumberBoolean = _interopRequireDefault(require("./NumberBoolean"));

var _ProductAttachmentDetails = _interopRequireDefault(require("./ProductAttachmentDetails"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The AddProductAttachmentDetails model module.
 * @module model/AddProductAttachmentDetails
 * @version 1.0.0
 */
var AddProductAttachmentDetails = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>AddProductAttachmentDetails</code>.
   * @alias module:model/AddProductAttachmentDetails
   * @implements module:model/ProductAttachmentDetails
   * @implements module:model/AddProductAttachmentDetailsAllOf
   * @param itemPrice {Number} The price at which this product will be added to the deal
   * @param quantity {Number} Quantity – e.g. how many items of this product will be added to the deal
   * @param productId {Number} The ID of the product
   */
  function AddProductAttachmentDetails(itemPrice, quantity, productId) {
    (0, _classCallCheck2["default"])(this, AddProductAttachmentDetails);

    _ProductAttachmentDetails["default"].initialize(this, itemPrice, quantity, productId);

    _AddProductAttachmentDetailsAllOf["default"].initialize(this);

    AddProductAttachmentDetails.initialize(this, itemPrice, quantity, productId);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(AddProductAttachmentDetails, null, [{
    key: "initialize",
    value: function initialize(obj, itemPrice, quantity, productId) {
      obj['item_price'] = itemPrice;
      obj['quantity'] = quantity;
      obj['product_id'] = productId;
    }
    /**
     * Constructs a <code>AddProductAttachmentDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddProductAttachmentDetails} obj Optional instance to populate.
     * @return {module:model/AddProductAttachmentDetails} The populated <code>AddProductAttachmentDetails</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new AddProductAttachmentDetails();

        _ProductAttachmentDetails["default"].constructFromObject(data, obj);

        _AddProductAttachmentDetailsAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('item_price')) {
          obj['item_price'] = _ApiClient["default"].convertToType(data['item_price'], 'Number');
          delete data['item_price'];
        }

        if (data.hasOwnProperty('quantity')) {
          obj['quantity'] = _ApiClient["default"].convertToType(data['quantity'], 'Number');
          delete data['quantity'];
        }

        if (data.hasOwnProperty('discount_percentage')) {
          obj['discount_percentage'] = _ApiClient["default"].convertToType(data['discount_percentage'], 'Number');
          delete data['discount_percentage'];
        }

        if (data.hasOwnProperty('duration')) {
          obj['duration'] = _ApiClient["default"].convertToType(data['duration'], 'Number');
          delete data['duration'];
        }

        if (data.hasOwnProperty('product_variation_id')) {
          obj['product_variation_id'] = _ApiClient["default"].convertToType(data['product_variation_id'], 'Number');
          delete data['product_variation_id'];
        }

        if (data.hasOwnProperty('comments')) {
          obj['comments'] = _ApiClient["default"].convertToType(data['comments'], 'String');
          delete data['comments'];
        }

        if (data.hasOwnProperty('tax')) {
          obj['tax'] = _ApiClient["default"].convertToType(data['tax'], 'Number');
          delete data['tax'];
        }

        if (data.hasOwnProperty('enabled_flag')) {
          obj['enabled_flag'] = _ApiClient["default"].convertToType(data['enabled_flag'], _NumberBoolean["default"]);
          delete data['enabled_flag'];
        }

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
          delete data['id'];
        }

        if (data.hasOwnProperty('company_id')) {
          obj['company_id'] = _ApiClient["default"].convertToType(data['company_id'], 'Number');
          delete data['company_id'];
        }

        if (data.hasOwnProperty('deal_id')) {
          obj['deal_id'] = _ApiClient["default"].convertToType(data['deal_id'], 'Number');
          delete data['deal_id'];
        }

        if (data.hasOwnProperty('product_id')) {
          obj['product_id'] = _ApiClient["default"].convertToType(data['product_id'], 'Number');
          delete data['product_id'];
        }

        if (data.hasOwnProperty('duration_unit')) {
          obj['duration_unit'] = _ApiClient["default"].convertToType(data['duration_unit'], 'String');
          delete data['duration_unit'];
        }

        if (data.hasOwnProperty('sum_no_discount')) {
          obj['sum_no_discount'] = _ApiClient["default"].convertToType(data['sum_no_discount'], 'Number');
          delete data['sum_no_discount'];
        }

        if (data.hasOwnProperty('sum')) {
          obj['sum'] = _ApiClient["default"].convertToType(data['sum'], 'Number');
          delete data['sum'];
        }

        if (data.hasOwnProperty('currency')) {
          obj['currency'] = _ApiClient["default"].convertToType(data['currency'], 'String');
          delete data['currency'];
        }

        if (data.hasOwnProperty('add_time')) {
          obj['add_time'] = _ApiClient["default"].convertToType(data['add_time'], 'String');
          delete data['add_time'];
        }

        if (data.hasOwnProperty('last_edit')) {
          obj['last_edit'] = _ApiClient["default"].convertToType(data['last_edit'], 'String');
          delete data['last_edit'];
        }

        if (data.hasOwnProperty('active_flag')) {
          obj['active_flag'] = _ApiClient["default"].convertToType(data['active_flag'], 'Boolean');
          delete data['active_flag'];
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
          delete data['name'];
        }

        if (data.hasOwnProperty('product_attachment_id')) {
          obj['product_attachment_id'] = _ApiClient["default"].convertToType(data['product_attachment_id'], 'Number');
          delete data['product_attachment_id'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return AddProductAttachmentDetails;
}();
/**
 * The price at which this product will be added to the deal
 * @member {Number} item_price
 */


AddProductAttachmentDetails.prototype['item_price'] = undefined;
/**
 * Quantity – e.g. how many items of this product will be added to the deal
 * @member {Number} quantity
 */

AddProductAttachmentDetails.prototype['quantity'] = undefined;
/**
 * The discount %. If omitted, will be set to 0.
 * @member {Number} discount_percentage
 * @default 0
 */

AddProductAttachmentDetails.prototype['discount_percentage'] = 0;
/**
 * The duration of the product (when product durations are not enabled for the company or if omitted, defaults to 1)
 * @member {Number} duration
 * @default 1
 */

AddProductAttachmentDetails.prototype['duration'] = 1;
/**
 * The ID of the product variation to use. When omitted, no variation will be used.
 * @member {Number} product_variation_id
 */

AddProductAttachmentDetails.prototype['product_variation_id'] = undefined;
/**
 * Any textual comment associated with this product-deal attachment. Visible and editable in the application UI.
 * @member {String} comments
 */

AddProductAttachmentDetails.prototype['comments'] = undefined;
/**
 * The product tax
 * @member {Number} tax
 */

AddProductAttachmentDetails.prototype['tax'] = undefined;
/**
 * Whether the product is enabled on the deal or not. This makes it possible to add products to a deal with a specific price and discount criteria - but keep them disabled, which refrains them from being included in the deal price calculation. When omitted, the product will be marked as enabled by default.
 * @member {module:model/NumberBoolean} enabled_flag
 */

AddProductAttachmentDetails.prototype['enabled_flag'] = undefined;
/**
 * The ID of the deal-product (the ID of the product attached to the deal)
 * @member {Number} id
 */

AddProductAttachmentDetails.prototype['id'] = undefined;
/**
 * The ID of the company
 * @member {Number} company_id
 */

AddProductAttachmentDetails.prototype['company_id'] = undefined;
/**
 * The ID of the deal
 * @member {Number} deal_id
 */

AddProductAttachmentDetails.prototype['deal_id'] = undefined;
/**
 * The ID of the product
 * @member {Number} product_id
 */

AddProductAttachmentDetails.prototype['product_id'] = undefined;
/**
 * The type of the duration. (For example hourly, daily, etc.)
 * @member {String} duration_unit
 */

AddProductAttachmentDetails.prototype['duration_unit'] = undefined;
/**
 * The product sum without the discount
 * @member {Number} sum_no_discount
 */

AddProductAttachmentDetails.prototype['sum_no_discount'] = undefined;
/**
 * The sum of all the products attached to the deal
 * @member {Number} sum
 */

AddProductAttachmentDetails.prototype['sum'] = undefined;
/**
 * The currency associated with the deal product
 * @member {String} currency
 */

AddProductAttachmentDetails.prototype['currency'] = undefined;
/**
 * The date and time when the product was added to the deal
 * @member {String} add_time
 */

AddProductAttachmentDetails.prototype['add_time'] = undefined;
/**
 * The date and time when the deal product was last edited
 * @member {String} last_edit
 */

AddProductAttachmentDetails.prototype['last_edit'] = undefined;
/**
 * Whether the product is active or not
 * @member {Boolean} active_flag
 */

AddProductAttachmentDetails.prototype['active_flag'] = undefined;
/**
 * The product name
 * @member {String} name
 */

AddProductAttachmentDetails.prototype['name'] = undefined;
/**
 * The ID of the deal-product (the ID of the product attached to the deal)
 * @member {Number} product_attachment_id
 */

AddProductAttachmentDetails.prototype['product_attachment_id'] = undefined; // Implement ProductAttachmentDetails interface:

/**
 * The price at which this product will be added to the deal
 * @member {Number} item_price
 */

_ProductAttachmentDetails["default"].prototype['item_price'] = undefined;
/**
 * Quantity – e.g. how many items of this product will be added to the deal
 * @member {Number} quantity
 */

_ProductAttachmentDetails["default"].prototype['quantity'] = undefined;
/**
 * The discount %. If omitted, will be set to 0.
 * @member {Number} discount_percentage
 * @default 0
 */

_ProductAttachmentDetails["default"].prototype['discount_percentage'] = 0;
/**
 * The duration of the product (when product durations are not enabled for the company or if omitted, defaults to 1)
 * @member {Number} duration
 * @default 1
 */

_ProductAttachmentDetails["default"].prototype['duration'] = 1;
/**
 * The ID of the product variation to use. When omitted, no variation will be used.
 * @member {Number} product_variation_id
 */

_ProductAttachmentDetails["default"].prototype['product_variation_id'] = undefined;
/**
 * Any textual comment associated with this product-deal attachment. Visible and editable in the application UI.
 * @member {String} comments
 */

_ProductAttachmentDetails["default"].prototype['comments'] = undefined;
/**
 * The product tax
 * @member {Number} tax
 */

_ProductAttachmentDetails["default"].prototype['tax'] = undefined;
/**
 * Whether the product is enabled on the deal or not. This makes it possible to add products to a deal with a specific price and discount criteria - but keep them disabled, which refrains them from being included in the deal price calculation. When omitted, the product will be marked as enabled by default.
 * @member {module:model/NumberBoolean} enabled_flag
 */

_ProductAttachmentDetails["default"].prototype['enabled_flag'] = undefined;
/**
 * The ID of the deal-product (the ID of the product attached to the deal)
 * @member {Number} id
 */

_ProductAttachmentDetails["default"].prototype['id'] = undefined;
/**
 * The ID of the company
 * @member {Number} company_id
 */

_ProductAttachmentDetails["default"].prototype['company_id'] = undefined;
/**
 * The ID of the deal
 * @member {Number} deal_id
 */

_ProductAttachmentDetails["default"].prototype['deal_id'] = undefined;
/**
 * The ID of the product
 * @member {Number} product_id
 */

_ProductAttachmentDetails["default"].prototype['product_id'] = undefined;
/**
 * The type of the duration. (For example hourly, daily, etc.)
 * @member {String} duration_unit
 */

_ProductAttachmentDetails["default"].prototype['duration_unit'] = undefined;
/**
 * The product sum without the discount
 * @member {Number} sum_no_discount
 */

_ProductAttachmentDetails["default"].prototype['sum_no_discount'] = undefined;
/**
 * The sum of all the products attached to the deal
 * @member {Number} sum
 */

_ProductAttachmentDetails["default"].prototype['sum'] = undefined;
/**
 * The currency associated with the deal product
 * @member {String} currency
 */

_ProductAttachmentDetails["default"].prototype['currency'] = undefined;
/**
 * The date and time when the product was added to the deal
 * @member {String} add_time
 */

_ProductAttachmentDetails["default"].prototype['add_time'] = undefined;
/**
 * The date and time when the deal product was last edited
 * @member {String} last_edit
 */

_ProductAttachmentDetails["default"].prototype['last_edit'] = undefined;
/**
 * Whether the product is active or not
 * @member {Boolean} active_flag
 */

_ProductAttachmentDetails["default"].prototype['active_flag'] = undefined;
/**
 * The product name
 * @member {String} name
 */

_ProductAttachmentDetails["default"].prototype['name'] = undefined; // Implement AddProductAttachmentDetailsAllOf interface:

/**
 * The ID of the deal-product (the ID of the product attached to the deal)
 * @member {Number} product_attachment_id
 */

_AddProductAttachmentDetailsAllOf["default"].prototype['product_attachment_id'] = undefined;
var _default = AddProductAttachmentDetails;
exports["default"] = _default;