"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _OrganizationDataWithIdAndActiveFlagAllOf = _interopRequireDefault(require("./OrganizationDataWithIdAndActiveFlagAllOf"));

var _RelationshipOrganizationInfoItem = _interopRequireDefault(require("./RelationshipOrganizationInfoItem"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The RelationshipOrganizationInfoItemWithActiveFlag model module.
 * @module model/RelationshipOrganizationInfoItemWithActiveFlag
 * @version 1.0.0
 */
var RelationshipOrganizationInfoItemWithActiveFlag = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>RelationshipOrganizationInfoItemWithActiveFlag</code>.
   * @alias module:model/RelationshipOrganizationInfoItemWithActiveFlag
   * @implements module:model/RelationshipOrganizationInfoItem
   * @implements module:model/OrganizationDataWithIdAndActiveFlagAllOf
   */
  function RelationshipOrganizationInfoItemWithActiveFlag() {
    (0, _classCallCheck2["default"])(this, RelationshipOrganizationInfoItemWithActiveFlag);

    _RelationshipOrganizationInfoItem["default"].initialize(this);

    _OrganizationDataWithIdAndActiveFlagAllOf["default"].initialize(this);

    RelationshipOrganizationInfoItemWithActiveFlag.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(RelationshipOrganizationInfoItemWithActiveFlag, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>RelationshipOrganizationInfoItemWithActiveFlag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RelationshipOrganizationInfoItemWithActiveFlag} obj Optional instance to populate.
     * @return {module:model/RelationshipOrganizationInfoItemWithActiveFlag} The populated <code>RelationshipOrganizationInfoItemWithActiveFlag</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new RelationshipOrganizationInfoItemWithActiveFlag();

        _RelationshipOrganizationInfoItem["default"].constructFromObject(data, obj);

        _OrganizationDataWithIdAndActiveFlagAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
          delete data['name'];
        }

        if (data.hasOwnProperty('people_count')) {
          obj['people_count'] = _ApiClient["default"].convertToType(data['people_count'], 'Number');
          delete data['people_count'];
        }

        if (data.hasOwnProperty('owner_id')) {
          obj['owner_id'] = _ApiClient["default"].convertToType(data['owner_id'], 'Number');
          delete data['owner_id'];
        }

        if (data.hasOwnProperty('address')) {
          obj['address'] = _ApiClient["default"].convertToType(data['address'], 'String');
          delete data['address'];
        }

        if (data.hasOwnProperty('cc_email')) {
          obj['cc_email'] = _ApiClient["default"].convertToType(data['cc_email'], 'String');
          delete data['cc_email'];
        }

        if (data.hasOwnProperty('value')) {
          obj['value'] = _ApiClient["default"].convertToType(data['value'], 'Number');
          delete data['value'];
        }

        if (data.hasOwnProperty('active_flag')) {
          obj['active_flag'] = _ApiClient["default"].convertToType(data['active_flag'], 'Boolean');
          delete data['active_flag'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return RelationshipOrganizationInfoItemWithActiveFlag;
}();
/**
 * The name of the organization associated with the item
 * @member {String} name
 */


RelationshipOrganizationInfoItemWithActiveFlag.prototype['name'] = undefined;
/**
 * The number of people connected with the organization that is associated with the item
 * @member {Number} people_count
 */

RelationshipOrganizationInfoItemWithActiveFlag.prototype['people_count'] = undefined;
/**
 * The ID of the owner of the organization that is associated with the item
 * @member {Number} owner_id
 */

RelationshipOrganizationInfoItemWithActiveFlag.prototype['owner_id'] = undefined;
/**
 * The address of the organization
 * @member {String} address
 */

RelationshipOrganizationInfoItemWithActiveFlag.prototype['address'] = undefined;
/**
 * The BCC email of the organization associated with the item
 * @member {String} cc_email
 */

RelationshipOrganizationInfoItemWithActiveFlag.prototype['cc_email'] = undefined;
/**
 * The ID of the organization
 * @member {Number} value
 */

RelationshipOrganizationInfoItemWithActiveFlag.prototype['value'] = undefined;
/**
 * Whether the associated organization is active or not
 * @member {Boolean} active_flag
 */

RelationshipOrganizationInfoItemWithActiveFlag.prototype['active_flag'] = undefined; // Implement RelationshipOrganizationInfoItem interface:

/**
 * The name of the organization associated with the item
 * @member {String} name
 */

_RelationshipOrganizationInfoItem["default"].prototype['name'] = undefined;
/**
 * The number of people connected with the organization that is associated with the item
 * @member {Number} people_count
 */

_RelationshipOrganizationInfoItem["default"].prototype['people_count'] = undefined;
/**
 * The ID of the owner of the organization that is associated with the item
 * @member {Number} owner_id
 */

_RelationshipOrganizationInfoItem["default"].prototype['owner_id'] = undefined;
/**
 * The address of the organization
 * @member {String} address
 */

_RelationshipOrganizationInfoItem["default"].prototype['address'] = undefined;
/**
 * The BCC email of the organization associated with the item
 * @member {String} cc_email
 */

_RelationshipOrganizationInfoItem["default"].prototype['cc_email'] = undefined;
/**
 * The ID of the organization
 * @member {Number} value
 */

_RelationshipOrganizationInfoItem["default"].prototype['value'] = undefined; // Implement OrganizationDataWithIdAndActiveFlagAllOf interface:

/**
 * Whether the associated organization is active or not
 * @member {Boolean} active_flag
 */

_OrganizationDataWithIdAndActiveFlagAllOf["default"].prototype['active_flag'] = undefined;
var _default = RelationshipOrganizationInfoItemWithActiveFlag;
exports["default"] = _default;