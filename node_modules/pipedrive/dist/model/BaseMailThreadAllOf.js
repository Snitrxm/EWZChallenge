"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _BaseMailThreadAllOfParties = _interopRequireDefault(require("./BaseMailThreadAllOfParties"));

var _NumberBooleanDefault = _interopRequireDefault(require("./NumberBooleanDefault0"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The BaseMailThreadAllOf model module.
 * @module model/BaseMailThreadAllOf
 * @version 1.0.0
 */
var BaseMailThreadAllOf = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>BaseMailThreadAllOf</code>.
   * @alias module:model/BaseMailThreadAllOf
   */
  function BaseMailThreadAllOf() {
    (0, _classCallCheck2["default"])(this, BaseMailThreadAllOf);
    BaseMailThreadAllOf.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(BaseMailThreadAllOf, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>BaseMailThreadAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BaseMailThreadAllOf} obj Optional instance to populate.
     * @return {module:model/BaseMailThreadAllOf} The populated <code>BaseMailThreadAllOf</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new BaseMailThreadAllOf();

        if (data.hasOwnProperty('parties')) {
          obj['parties'] = _BaseMailThreadAllOfParties["default"].constructFromObject(data['parties']);
          delete data['parties'];
        }

        if (data.hasOwnProperty('drafts_parties')) {
          obj['drafts_parties'] = _ApiClient["default"].convertToType(data['drafts_parties'], [Object]);
          delete data['drafts_parties'];
        }

        if (data.hasOwnProperty('folders')) {
          obj['folders'] = _ApiClient["default"].convertToType(data['folders'], ['String']);
          delete data['folders'];
        }

        if (data.hasOwnProperty('version')) {
          obj['version'] = _ApiClient["default"].convertToType(data['version'], 'Number');
          delete data['version'];
        }

        if (data.hasOwnProperty('snippet_draft')) {
          obj['snippet_draft'] = _ApiClient["default"].convertToType(data['snippet_draft'], 'String');
          delete data['snippet_draft'];
        }

        if (data.hasOwnProperty('snippet_sent')) {
          obj['snippet_sent'] = _ApiClient["default"].convertToType(data['snippet_sent'], 'String');
          delete data['snippet_sent'];
        }

        if (data.hasOwnProperty('message_count')) {
          obj['message_count'] = _ApiClient["default"].convertToType(data['message_count'], 'Number');
          delete data['message_count'];
        }

        if (data.hasOwnProperty('has_draft_flag')) {
          obj['has_draft_flag'] = _ApiClient["default"].convertToType(data['has_draft_flag'], _NumberBooleanDefault["default"]);
          delete data['has_draft_flag'];
        }

        if (data.hasOwnProperty('has_sent_flag')) {
          obj['has_sent_flag'] = _ApiClient["default"].convertToType(data['has_sent_flag'], _NumberBooleanDefault["default"]);
          delete data['has_sent_flag'];
        }

        if (data.hasOwnProperty('archived_flag')) {
          obj['archived_flag'] = _ApiClient["default"].convertToType(data['archived_flag'], _NumberBooleanDefault["default"]);
          delete data['archived_flag'];
        }

        if (data.hasOwnProperty('shared_flag')) {
          obj['shared_flag'] = _ApiClient["default"].convertToType(data['shared_flag'], _NumberBooleanDefault["default"]);
          delete data['shared_flag'];
        }

        if (data.hasOwnProperty('external_deleted_flag')) {
          obj['external_deleted_flag'] = _ApiClient["default"].convertToType(data['external_deleted_flag'], _NumberBooleanDefault["default"]);
          delete data['external_deleted_flag'];
        }

        if (data.hasOwnProperty('first_message_to_me_flag')) {
          obj['first_message_to_me_flag'] = _ApiClient["default"].convertToType(data['first_message_to_me_flag'], _NumberBooleanDefault["default"]);
          delete data['first_message_to_me_flag'];
        }

        if (data.hasOwnProperty('last_message_timestamp')) {
          obj['last_message_timestamp'] = _ApiClient["default"].convertToType(data['last_message_timestamp'], 'Date');
          delete data['last_message_timestamp'];
        }

        if (data.hasOwnProperty('first_message_timestamp')) {
          obj['first_message_timestamp'] = _ApiClient["default"].convertToType(data['first_message_timestamp'], 'Date');
          delete data['first_message_timestamp'];
        }

        if (data.hasOwnProperty('last_message_sent_timestamp')) {
          obj['last_message_sent_timestamp'] = _ApiClient["default"].convertToType(data['last_message_sent_timestamp'], 'Date');
          delete data['last_message_sent_timestamp'];
        }

        if (data.hasOwnProperty('last_message_received_timestamp')) {
          obj['last_message_received_timestamp'] = _ApiClient["default"].convertToType(data['last_message_received_timestamp'], 'Date');
          delete data['last_message_received_timestamp'];
        }

        if (data.hasOwnProperty('add_time')) {
          obj['add_time'] = _ApiClient["default"].convertToType(data['add_time'], 'Date');
          delete data['add_time'];
        }

        if (data.hasOwnProperty('update_time')) {
          obj['update_time'] = _ApiClient["default"].convertToType(data['update_time'], 'Date');
          delete data['update_time'];
        }

        if (data.hasOwnProperty('deal_id')) {
          obj['deal_id'] = _ApiClient["default"].convertToType(data['deal_id'], 'Number');
          delete data['deal_id'];
        }

        if (data.hasOwnProperty('deal_status')) {
          obj['deal_status'] = _ApiClient["default"].convertToType(data['deal_status'], 'String');
          delete data['deal_status'];
        }

        if (data.hasOwnProperty('lead_id')) {
          obj['lead_id'] = _ApiClient["default"].convertToType(data['lead_id'], 'String');
          delete data['lead_id'];
        }

        if (data.hasOwnProperty('all_messages_sent_flag')) {
          obj['all_messages_sent_flag'] = _ApiClient["default"].convertToType(data['all_messages_sent_flag'], _NumberBooleanDefault["default"]);
          delete data['all_messages_sent_flag'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return BaseMailThreadAllOf;
}();
/**
 * @member {module:model/BaseMailThreadAllOfParties} parties
 */


BaseMailThreadAllOf.prototype['parties'] = undefined;
/**
 * Parties of the drafted mail thread
 * @member {Array.<Object>} drafts_parties
 */

BaseMailThreadAllOf.prototype['drafts_parties'] = undefined;
/**
 * Folders in which messages from thread are being stored
 * @member {Array.<String>} folders
 */

BaseMailThreadAllOf.prototype['folders'] = undefined;
/**
 * Version
 * @member {Number} version
 */

BaseMailThreadAllOf.prototype['version'] = undefined;
/**
 * A snippet from a draft
 * @member {String} snippet_draft
 */

BaseMailThreadAllOf.prototype['snippet_draft'] = undefined;
/**
 * A snippet from a message sent
 * @member {String} snippet_sent
 */

BaseMailThreadAllOf.prototype['snippet_sent'] = undefined;
/**
 * An amount of messages
 * @member {Number} message_count
 */

BaseMailThreadAllOf.prototype['message_count'] = undefined;
/**
 * Whether the mail thread has any drafts
 * @member {module:model/NumberBooleanDefault0} has_draft_flag
 */

BaseMailThreadAllOf.prototype['has_draft_flag'] = undefined;
/**
 * Whether the mail thread has messages sent
 * @member {module:model/NumberBooleanDefault0} has_sent_flag
 */

BaseMailThreadAllOf.prototype['has_sent_flag'] = undefined;
/**
 * Whether the mail thread is archived
 * @member {module:model/NumberBooleanDefault0} archived_flag
 */

BaseMailThreadAllOf.prototype['archived_flag'] = undefined;
/**
 * Whether the mail thread is shared
 * @member {module:model/NumberBooleanDefault0} shared_flag
 */

BaseMailThreadAllOf.prototype['shared_flag'] = undefined;
/**
 * Whether the mail thread has been deleted externally
 * @member {module:model/NumberBooleanDefault0} external_deleted_flag
 */

BaseMailThreadAllOf.prototype['external_deleted_flag'] = undefined;
/**
 * Whether the mail thread was initialized by others
 * @member {module:model/NumberBooleanDefault0} first_message_to_me_flag
 */

BaseMailThreadAllOf.prototype['first_message_to_me_flag'] = undefined;
/**
 * Last message timestamp
 * @member {Date} last_message_timestamp
 */

BaseMailThreadAllOf.prototype['last_message_timestamp'] = undefined;
/**
 * The time when the mail thread has had the first message received or created
 * @member {Date} first_message_timestamp
 */

BaseMailThreadAllOf.prototype['first_message_timestamp'] = undefined;
/**
 * The last time when the mail thread has had a message sent
 * @member {Date} last_message_sent_timestamp
 */

BaseMailThreadAllOf.prototype['last_message_sent_timestamp'] = undefined;
/**
 * The last time when the mail thread has had a message received
 * @member {Date} last_message_received_timestamp
 */

BaseMailThreadAllOf.prototype['last_message_received_timestamp'] = undefined;
/**
 * The time when the mail thread was inserted to database
 * @member {Date} add_time
 */

BaseMailThreadAllOf.prototype['add_time'] = undefined;
/**
 * The time when the mail thread was updated in database received
 * @member {Date} update_time
 */

BaseMailThreadAllOf.prototype['update_time'] = undefined;
/**
 * The ID of the deal
 * @member {Number} deal_id
 */

BaseMailThreadAllOf.prototype['deal_id'] = undefined;
/**
 * Status of the deal
 * @member {String} deal_status
 */

BaseMailThreadAllOf.prototype['deal_status'] = undefined;
/**
 * The ID of the lead
 * @member {String} lead_id
 */

BaseMailThreadAllOf.prototype['lead_id'] = undefined;
/**
 * Whether all the mail thread messages have been sent
 * @member {module:model/NumberBooleanDefault0} all_messages_sent_flag
 */

BaseMailThreadAllOf.prototype['all_messages_sent_flag'] = undefined;
var _default = BaseMailThreadAllOf;
exports["default"] = _default;