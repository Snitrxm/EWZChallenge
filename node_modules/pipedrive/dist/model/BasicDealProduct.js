"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _NumberBoolean = _interopRequireDefault(require("./NumberBoolean"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The BasicDealProduct model module.
 * @module model/BasicDealProduct
 * @version 1.0.0
 */
var BasicDealProduct = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>BasicDealProduct</code>.
   * @alias module:model/BasicDealProduct
   * @param itemPrice {Number} The price at which this product will be added to the deal
   * @param quantity {Number} Quantity – e.g. how many items of this product will be added to the deal
   */
  function BasicDealProduct(itemPrice, quantity) {
    (0, _classCallCheck2["default"])(this, BasicDealProduct);
    BasicDealProduct.initialize(this, itemPrice, quantity);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(BasicDealProduct, null, [{
    key: "initialize",
    value: function initialize(obj, itemPrice, quantity) {
      obj['item_price'] = itemPrice;
      obj['quantity'] = quantity;
    }
    /**
     * Constructs a <code>BasicDealProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BasicDealProduct} obj Optional instance to populate.
     * @return {module:model/BasicDealProduct} The populated <code>BasicDealProduct</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new BasicDealProduct();

        if (data.hasOwnProperty('item_price')) {
          obj['item_price'] = _ApiClient["default"].convertToType(data['item_price'], 'Number');
          delete data['item_price'];
        }

        if (data.hasOwnProperty('quantity')) {
          obj['quantity'] = _ApiClient["default"].convertToType(data['quantity'], 'Number');
          delete data['quantity'];
        }

        if (data.hasOwnProperty('discount_percentage')) {
          obj['discount_percentage'] = _ApiClient["default"].convertToType(data['discount_percentage'], 'Number');
          delete data['discount_percentage'];
        }

        if (data.hasOwnProperty('duration')) {
          obj['duration'] = _ApiClient["default"].convertToType(data['duration'], 'Number');
          delete data['duration'];
        }

        if (data.hasOwnProperty('product_variation_id')) {
          obj['product_variation_id'] = _ApiClient["default"].convertToType(data['product_variation_id'], 'Number');
          delete data['product_variation_id'];
        }

        if (data.hasOwnProperty('comments')) {
          obj['comments'] = _ApiClient["default"].convertToType(data['comments'], 'String');
          delete data['comments'];
        }

        if (data.hasOwnProperty('tax')) {
          obj['tax'] = _ApiClient["default"].convertToType(data['tax'], 'Number');
          delete data['tax'];
        }

        if (data.hasOwnProperty('enabled_flag')) {
          obj['enabled_flag'] = _ApiClient["default"].convertToType(data['enabled_flag'], _NumberBoolean["default"]);
          delete data['enabled_flag'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return BasicDealProduct;
}();
/**
 * The price at which this product will be added to the deal
 * @member {Number} item_price
 */


BasicDealProduct.prototype['item_price'] = undefined;
/**
 * Quantity – e.g. how many items of this product will be added to the deal
 * @member {Number} quantity
 */

BasicDealProduct.prototype['quantity'] = undefined;
/**
 * The discount %. If omitted, will be set to 0.
 * @member {Number} discount_percentage
 * @default 0
 */

BasicDealProduct.prototype['discount_percentage'] = 0;
/**
 * The duration of the product (when product durations are not enabled for the company or if omitted, defaults to 1)
 * @member {Number} duration
 * @default 1
 */

BasicDealProduct.prototype['duration'] = 1;
/**
 * The ID of the product variation to use. When omitted, no variation will be used.
 * @member {Number} product_variation_id
 */

BasicDealProduct.prototype['product_variation_id'] = undefined;
/**
 * Any textual comment associated with this product-deal attachment. Visible and editable in the application UI.
 * @member {String} comments
 */

BasicDealProduct.prototype['comments'] = undefined;
/**
 * The tax percentage
 * @member {Number} tax
 * @default 0
 */

BasicDealProduct.prototype['tax'] = 0;
/**
 * Whether the product is enabled on the deal or not. This makes it possible to add products to a deal with a specific price and discount criteria - but keep them disabled, which refrains them from being included in the deal price calculation. When omitted, the product will be marked as enabled by default.
 * @member {module:model/NumberBoolean} enabled_flag
 */

BasicDealProduct.prototype['enabled_flag'] = undefined;
var _default = BasicDealProduct;
exports["default"] = _default;