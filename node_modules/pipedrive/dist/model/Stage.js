"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The Stage model module.
 * @module model/Stage
 * @version 1.0.0
 */
var Stage = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Stage</code>.
   * @alias module:model/Stage
   */
  function Stage() {
    (0, _classCallCheck2["default"])(this, Stage);
    Stage.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(Stage, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>Stage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Stage} obj Optional instance to populate.
     * @return {module:model/Stage} The populated <code>Stage</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Stage();

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
          delete data['name'];
        }

        if (data.hasOwnProperty('pipeline_id')) {
          obj['pipeline_id'] = _ApiClient["default"].convertToType(data['pipeline_id'], 'Number');
          delete data['pipeline_id'];
        }

        if (data.hasOwnProperty('deal_probability')) {
          obj['deal_probability'] = _ApiClient["default"].convertToType(data['deal_probability'], 'Number');
          delete data['deal_probability'];
        }

        if (data.hasOwnProperty('rotten_flag')) {
          obj['rotten_flag'] = _ApiClient["default"].convertToType(data['rotten_flag'], 'Boolean');
          delete data['rotten_flag'];
        }

        if (data.hasOwnProperty('rotten_days')) {
          obj['rotten_days'] = _ApiClient["default"].convertToType(data['rotten_days'], 'Number');
          delete data['rotten_days'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return Stage;
}();
/**
 * The name of the stage
 * @member {String} name
 */


Stage.prototype['name'] = undefined;
/**
 * The ID of the pipeline to add stage to
 * @member {Number} pipeline_id
 */

Stage.prototype['pipeline_id'] = undefined;
/**
 * The success probability percentage of the deal. Used/shown when deal weighted values are used.
 * @member {Number} deal_probability
 */

Stage.prototype['deal_probability'] = undefined;
/**
 * Whether deals in this stage can become rotten
 * @member {module:model/Stage.RottenFlagEnum} rotten_flag
 */

Stage.prototype['rotten_flag'] = undefined;
/**
 * The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
 * @member {Number} rotten_days
 */

Stage.prototype['rotten_days'] = undefined;
/**
 * Allowed values for the <code>rotten_flag</code> property.
 * @enum {Boolean}
 * @readonly
 */

Stage['RottenFlagEnum'] = {
  /**
   * value: "true"
   * @const
   */
  "true": "true",

  /**
   * value: "false"
   * @const
   */
  "false": "false"
};
var _default = Stage;
exports["default"] = _default;