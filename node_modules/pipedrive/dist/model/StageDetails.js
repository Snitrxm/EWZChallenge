"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _BaseStage = _interopRequireDefault(require("./BaseStage"));

var _DealSummary = _interopRequireDefault(require("./DealSummary"));

var _PipelineDetailsAllOf = _interopRequireDefault(require("./PipelineDetailsAllOf"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The StageDetails model module.
 * @module model/StageDetails
 * @version 1.0.0
 */
var StageDetails = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>StageDetails</code>.
   * The stage object
   * @alias module:model/StageDetails
   * @implements module:model/BaseStage
   * @implements module:model/PipelineDetailsAllOf
   */
  function StageDetails() {
    (0, _classCallCheck2["default"])(this, StageDetails);

    _BaseStage["default"].initialize(this);

    _PipelineDetailsAllOf["default"].initialize(this);

    StageDetails.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(StageDetails, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>StageDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StageDetails} obj Optional instance to populate.
     * @return {module:model/StageDetails} The populated <code>StageDetails</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new StageDetails();

        _BaseStage["default"].constructFromObject(data, obj);

        _PipelineDetailsAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'Number');
          delete data['id'];
        }

        if (data.hasOwnProperty('order_nr')) {
          obj['order_nr'] = _ApiClient["default"].convertToType(data['order_nr'], 'Number');
          delete data['order_nr'];
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
          delete data['name'];
        }

        if (data.hasOwnProperty('active_flag')) {
          obj['active_flag'] = _ApiClient["default"].convertToType(data['active_flag'], 'Boolean');
          delete data['active_flag'];
        }

        if (data.hasOwnProperty('deal_probability')) {
          obj['deal_probability'] = _ApiClient["default"].convertToType(data['deal_probability'], 'Number');
          delete data['deal_probability'];
        }

        if (data.hasOwnProperty('pipeline_id')) {
          obj['pipeline_id'] = _ApiClient["default"].convertToType(data['pipeline_id'], 'Number');
          delete data['pipeline_id'];
        }

        if (data.hasOwnProperty('rotten_flag')) {
          obj['rotten_flag'] = _ApiClient["default"].convertToType(data['rotten_flag'], 'Boolean');
          delete data['rotten_flag'];
        }

        if (data.hasOwnProperty('rotten_days')) {
          obj['rotten_days'] = _ApiClient["default"].convertToType(data['rotten_days'], 'Number');
          delete data['rotten_days'];
        }

        if (data.hasOwnProperty('add_time')) {
          obj['add_time'] = _ApiClient["default"].convertToType(data['add_time'], 'String');
          delete data['add_time'];
        }

        if (data.hasOwnProperty('update_time')) {
          obj['update_time'] = _ApiClient["default"].convertToType(data['update_time'], 'String');
          delete data['update_time'];
        }

        if (data.hasOwnProperty('deals_summary')) {
          obj['deals_summary'] = _DealSummary["default"].constructFromObject(data['deals_summary']);
          delete data['deals_summary'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return StageDetails;
}();
/**
 * The ID of the stage
 * @member {Number} id
 */


StageDetails.prototype['id'] = undefined;
/**
 * Defines the order of the stage
 * @member {Number} order_nr
 */

StageDetails.prototype['order_nr'] = undefined;
/**
 * The name of the stage
 * @member {String} name
 */

StageDetails.prototype['name'] = undefined;
/**
 * Whether the stage is active or deleted
 * @member {Boolean} active_flag
 */

StageDetails.prototype['active_flag'] = undefined;
/**
 * The success probability percentage of the deal. Used/shown when the deal weighted values are used.
 * @member {Number} deal_probability
 */

StageDetails.prototype['deal_probability'] = undefined;
/**
 * The ID of the pipeline to add the stage to
 * @member {Number} pipeline_id
 */

StageDetails.prototype['pipeline_id'] = undefined;
/**
 * Whether deals in this stage can become rotten
 * @member {module:model/StageDetails.RottenFlagEnum} rotten_flag
 */

StageDetails.prototype['rotten_flag'] = undefined;
/**
 * The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
 * @member {Number} rotten_days
 */

StageDetails.prototype['rotten_days'] = undefined;
/**
 * The stage creation time. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} add_time
 */

StageDetails.prototype['add_time'] = undefined;
/**
 * The stage update time. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} update_time
 */

StageDetails.prototype['update_time'] = undefined;
/**
 * @member {module:model/DealSummary} deals_summary
 */

StageDetails.prototype['deals_summary'] = undefined; // Implement BaseStage interface:

/**
 * The ID of the stage
 * @member {Number} id
 */

_BaseStage["default"].prototype['id'] = undefined;
/**
 * Defines the order of the stage
 * @member {Number} order_nr
 */

_BaseStage["default"].prototype['order_nr'] = undefined;
/**
 * The name of the stage
 * @member {String} name
 */

_BaseStage["default"].prototype['name'] = undefined;
/**
 * Whether the stage is active or deleted
 * @member {Boolean} active_flag
 */

_BaseStage["default"].prototype['active_flag'] = undefined;
/**
 * The success probability percentage of the deal. Used/shown when the deal weighted values are used.
 * @member {Number} deal_probability
 */

_BaseStage["default"].prototype['deal_probability'] = undefined;
/**
 * The ID of the pipeline to add the stage to
 * @member {Number} pipeline_id
 */

_BaseStage["default"].prototype['pipeline_id'] = undefined;
/**
 * Whether deals in this stage can become rotten
 * @member {module:model/BaseStage.RottenFlagEnum} rotten_flag
 */

_BaseStage["default"].prototype['rotten_flag'] = undefined;
/**
 * The number of days the deals not updated in this stage would become rotten. Applies only if the `rotten_flag` is set.
 * @member {Number} rotten_days
 */

_BaseStage["default"].prototype['rotten_days'] = undefined;
/**
 * The stage creation time. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} add_time
 */

_BaseStage["default"].prototype['add_time'] = undefined;
/**
 * The stage update time. Format: YYYY-MM-DD HH:MM:SS.
 * @member {String} update_time
 */

_BaseStage["default"].prototype['update_time'] = undefined; // Implement PipelineDetailsAllOf interface:

/**
 * @member {module:model/DealSummary} deals_summary
 */

_PipelineDetailsAllOf["default"].prototype['deals_summary'] = undefined;
/**
 * Allowed values for the <code>rotten_flag</code> property.
 * @enum {Boolean}
 * @readonly
 */

StageDetails['RottenFlagEnum'] = {
  /**
   * value: "true"
   * @const
   */
  "true": "true",

  /**
   * value: "false"
   * @const
   */
  "false": "false"
};
var _default = StageDetails;
exports["default"] = _default;