"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _BaseRole = _interopRequireDefault(require("./BaseRole"));

var _RoleAssignmentAllOf = _interopRequireDefault(require("./RoleAssignmentAllOf"));

/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
 * The RoleAssignment model module.
 * @module model/RoleAssignment
 * @version 1.0.0
 */
var RoleAssignment = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>RoleAssignment</code>.
   * The assignment data of the role
   * @alias module:model/RoleAssignment
   * @implements module:model/BaseRole
   * @implements module:model/RoleAssignmentAllOf
   */
  function RoleAssignment() {
    (0, _classCallCheck2["default"])(this, RoleAssignment);

    _BaseRole["default"].initialize(this);

    _RoleAssignmentAllOf["default"].initialize(this);

    RoleAssignment.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  (0, _createClass2["default"])(RoleAssignment, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>RoleAssignment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoleAssignment} obj Optional instance to populate.
     * @return {module:model/RoleAssignment} The populated <code>RoleAssignment</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new RoleAssignment();

        _BaseRole["default"].constructFromObject(data, obj);

        _RoleAssignmentAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('parent_role_id')) {
          obj['parent_role_id'] = _ApiClient["default"].convertToType(data['parent_role_id'], 'Number');
          delete data['parent_role_id'];
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
          delete data['name'];
        }

        if (data.hasOwnProperty('user_id')) {
          obj['user_id'] = _ApiClient["default"].convertToType(data['user_id'], 'Number');
          delete data['user_id'];
        }

        if (data.hasOwnProperty('role_id')) {
          obj['role_id'] = _ApiClient["default"].convertToType(data['role_id'], 'Number');
          delete data['role_id'];
        }

        if (data.hasOwnProperty('active_flag')) {
          obj['active_flag'] = _ApiClient["default"].convertToType(data['active_flag'], 'Boolean');
          delete data['active_flag'];
        }

        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
          delete data['type'];
        }

        if (Object.keys(data).length > 0) {
          Object.assign(obj, data);
        }
      }

      return obj;
    }
  }]);
  return RoleAssignment;
}();
/**
 * The ID of the parent role
 * @member {Number} parent_role_id
 */


RoleAssignment.prototype['parent_role_id'] = undefined;
/**
 * The name of the role
 * @member {String} name
 */

RoleAssignment.prototype['name'] = undefined;
/**
 * The user ID
 * @member {Number} user_id
 */

RoleAssignment.prototype['user_id'] = undefined;
/**
 * The role ID
 * @member {Number} role_id
 */

RoleAssignment.prototype['role_id'] = undefined;
/**
 * Whether the role is active or not
 * @member {Boolean} active_flag
 */

RoleAssignment.prototype['active_flag'] = undefined;
/**
 * The assignment type
 * @member {String} type
 */

RoleAssignment.prototype['type'] = undefined; // Implement BaseRole interface:

/**
 * The ID of the parent role
 * @member {Number} parent_role_id
 */

_BaseRole["default"].prototype['parent_role_id'] = undefined;
/**
 * The name of the role
 * @member {String} name
 */

_BaseRole["default"].prototype['name'] = undefined; // Implement RoleAssignmentAllOf interface:

/**
 * The user ID
 * @member {Number} user_id
 */

_RoleAssignmentAllOf["default"].prototype['user_id'] = undefined;
/**
 * The role ID
 * @member {Number} role_id
 */

_RoleAssignmentAllOf["default"].prototype['role_id'] = undefined;
/**
 * Whether the role is active or not
 * @member {Boolean} active_flag
 */

_RoleAssignmentAllOf["default"].prototype['active_flag'] = undefined;
/**
 * The assignment type
 * @member {String} type
 */

_RoleAssignmentAllOf["default"].prototype['type'] = undefined;
var _default = RoleAssignment;
exports["default"] = _default;